{"version":3,"sources":["Redux/Firebase/fbConfig.jsx","Redux/Actions/userAction.jsx","components/GuestNavBar.jsx","components/Footer.jsx","pages/LoginPage.jsx","components/ListingPic.jsx","pages/Listing.jsx","components/Navbar.jsx","components/DonationGoogleMap.jsx","pages/Donation.jsx","components/Card.jsx","pages/Main.jsx","pages/Signup.jsx","components/Profile/ProfileCard.jsx","components/Profile/Uploadfile.jsx","pages/Profile.jsx","components/GoogleMap.jsx","pages/ItemDetails.jsx","Redux/Actions/itemAction.jsx","pages/DonationSummary.jsx","pages/Logout.jsx","components/PendingStatus/Pending.jsx","components/PendingStatus/PendingApproval.jsx","pages/MyItemStatus.jsx","router/Routes.js","Redux/Reducers/itemReducer.js","Redux/Reducers/userReducer.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","getUserData","dispatch","type","fetch","method","headers","localStorage","FBIdToken","then","res","json","data","payload","catch","err","console","log","GuestNavbar","Component","state","collapseID","toggleCollapse","this","setState","prevState","closeCollapse","collID","window","scrollTo","render","color","dark","expand","fixed","scrolling","href","className","fab","icon","style","height","width","onClick","id","isOpen","navbar","right","to","Footer","Date","getFullYear","LoginPage","email","password","handleChange","e","target","value","handleSubmit","form","props","loginUser","componentWillReceiveProps","nextProps","logintoken","token","setItem","history","push","error","alert","md","label","onChange","group","validate","success","size","connect","user","response","userData","body","JSON","stringify","ok","ListingPic","activeItem","length","showControls","showIndicators","itemId","src","alt","Listing","Navbar","username","getItem","componentDidMount","navigate","exact","DonationGoogleMap","mapClick","x","y","lat","lng","event","latlong","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","defaultProps","Donation","file","long","onChangeHandleFile","files","reader","FileReader","readAsDataURL","addEventListener","result","url","picUpload","options","i","l","selected","someCallback","getLatLong","donateItem","col-md-1","rows","placeholder","class","multiple","arrayOfOptionValues","multipleOptions","Card","post","viewItem","border","padding","userHandle","imageUrl","waves","itemName","itemCondition","itemStatus","outline","Main","FilteredPosts","usertype","itemList","search","searchResult","searchDisplay","validateLogin","onKeyPress","searchitem","itemlist","filter","toLowerCase","includes","Navigate","itemID","PopularListing","map","onKeyDown","compose","ordered","items","firestoreConnect","collection","Signup","cfmpassword","customer","registerUser","register","Fragment","GuestNavBar","onlick","ProfileCard","profile","picture","name","location","Uploadfile","inputs","htmlFor","containerClassName","Profile","bio","PictureUploaded","pic","onSubmitAll","handle","updateProfile","GoBack","doc","update","AnyReactComponent","text","GoogleMap","address","ItemDetails","itemid","match","params","ReserveItem","item","createdAt","now","recipient","requestStatus","updateItem","addRequest","category","description","collectionpoint","Address","Coordinates","ownProps","list","singleitem","Name","formdata","add","DonationSummary","bindActionCreators","Logout","clear","Pending","myRequest","PendingApproval","MyItemStatus","myrequestlist","requests","Routes","React","path","component","Login","BallotItems","itemDetails","initState","itemReducers","action","loading","credentials","notifications","userReducer","authenticated","RootReducer","combineReducers","itemReducer","firestoreReducer","middleWare","thunk","withExtraArgument","getFirebase","getFirestore","store","createStore","applyMiddleware","reduxFirestore","App","Store","createFirestoreInstance","overlay","marginTop","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2RAIO,MAAMA,EAAS,CAClBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,gBAGnBC,IAASC,cAAcT,GACvBQ,IAASE,YAEMF,QAAf,EChBO,MA2BMG,EAAc,IAAOC,IAC9BA,EAAS,CAAEC,KAAM,iBACjBC,MAAM,mEAAmE,CACrEC,OAAQ,MACRC,QAAU,CACN,eAAgB,mBAChB,cAAkBC,aAAaC,aAGtCC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMG,IACHV,EAAS,CACPC,KAAM,WACNU,QAASD,OAGZE,OAAOC,GAAQC,QAAQC,IAAIF,M,YCxClC,MAAMG,UAAoBC,YAAW,eAAD,oBAChCC,MAAQ,CACJC,WAAY,IAFgB,KAKhCC,eAAiBD,GAAc,IAC3BE,KAAKC,UAASC,IAAS,CACnBJ,WAAYI,EAAUJ,aAAeA,EAAaA,EAAa,OAPvC,KAUhCK,cAAgBC,GAAU,KAAO,MACrBN,EAAeE,KAAKH,MAApBC,WACRO,OAAOC,SAAS,EAAG,GACnBR,IAAeM,GAAUJ,KAAKC,SAAS,CAAEH,WAAY,MAGzDS,SAKqBP,KAAKD,eAAe,sBAJrC,MAOQD,EAAeE,KAAKH,MAApBC,WACR,OACI,8BACI,eAAC,IAAD,CAAWU,MAAM,mBAAmBC,MAAI,EAACC,OAAO,KAAKC,MAAM,MAAMC,WAAS,EAA1E,UACI,eAAC,IAAD,CAAgBC,KAAK,IAAIC,UAAU,wBAAnC,UACI,cAAC,IAAD,CAASC,KAAG,EAACC,KAAK,WAAWC,MAAO,CAAEC,OAAQ,SAAUC,MAAO,YAC/D,wBAAQL,UAAU,eAAlB,2BAEJ,cAAC,IAAD,CACIM,QAASpB,KAAKD,eAAe,wBAEjC,cAAC,IAAD,CAAasB,GAAG,qBAAqBC,OAAQxB,EAAYyB,QAAM,EAA/D,SAEI,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIJ,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,UAFP,SAII,gDAGR,cAAC,IAAD,UACI,cAAC,IAAD,CACIL,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,SAFP,SAII,0DAWrB9B,QC9DA,MAAM+B,UAAe9B,YAChCW,SACI,OACI,8BACI,cAAC,IAAD,CAAWC,MAAM,mBAAjB,SACI,oBAAGM,UAAU,yCAAb,mBACY,IAAIa,MAAOC,cADvB,cAEN,mBAAGf,KAAK,8BAAR,uCCJd,MAAMgB,UAAkBjC,YAAW,eAAD,oBAC9BC,MAAQ,CACJiC,MAAO,GACPC,SAAU,IAHgB,KAK9BC,aAAgBC,IACZjC,KAAKC,SAAS,CAAE,CAACgC,EAAEC,OAAOb,IAAKY,EAAEC,OAAOC,SANd,KAS9BC,aAAe,KAGX,MAAMC,EAAO,CACTP,MAAO9B,KAAKH,MAAMiC,MAClBC,SAAU/B,KAAKH,MAAMkC,UAEzB/B,KAAKsC,MAAMC,UAAUF,IAEzBG,0BAA0BC,GAClBA,EAAUC,WAAWC,OACrB3D,aAAa4D,QAAQ,QAASH,EAAUC,WAAWC,OACnD3D,aAAa4D,QAAQ,WAAY5C,KAAKH,MAAMiC,OAC5C9C,aAAa4D,QAAQ,WAAY,eACjC5C,KAAKsC,MAAMO,QAAQC,KAAK,MAEnBL,EAAUC,WAAWK,QAC1B/C,KAAKC,SAAS,CAAE6B,MAAO,GAAIC,SAAU,KACrCiB,MAAMP,EAAUC,WAAWK,QAInCxC,SACI,OACI,gCACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,uBACA,cAAC,IAAD,UACI,eAAC,IAAD,CAAQ0C,GAAG,KAAX,UACI,oBAAInC,UAAU,YAAd,mCACA,uBACA,iCACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAAUoC,MAAM,gBAAgB7B,GAAG,QAAQL,KAAK,WAAWmC,SAAUnD,KAAKgC,aAAcoB,OAAK,EAACxE,KAAK,QAAQyE,UAAQ,EAACN,MAAM,QAAQO,QAAQ,QAAQnB,MAAOnC,KAAKH,MAAMiC,QACpK,cAAC,IAAD,CAAUoB,MAAM,WAAWlC,KAAK,OAAOoC,OAAK,EAACxE,KAAK,WAAWuE,SAAUnD,KAAKgC,aAAcX,GAAG,WAAWgC,UAAQ,EAAClB,MAAOnC,KAAKH,MAAMkC,cAEvI,sBAAKjB,UAAU,cAAf,UACI,cAAC,IAAD,CAAQM,QAASpB,KAAKoC,aAAc5B,MAAM,MAAM+C,KAAK,KAArD,mBACA,sBACA,kCAAI,mBAAG1C,KAAK,+BAAR,6EAMxB,uBACA,cAAC,EAAD,QAUD2C,mBALS3D,IAAK,CACzB6C,WAAY7C,EAAM4D,KAAKC,YAIa,CAAEnB,UHxEhBoB,GAAahF,IAElCE,MAAM,oEAAoE,CACvEC,OAAQ,OACRC,QAAU,CACN,eAAgB,oBAEpB6E,KAAMC,KAAKC,UAAUH,KAEpBzE,MAAMC,IACH,IAAIA,EAAI4E,GAAI,MAAM5E,EAClB,OAAOA,EAAIC,UAEdF,MAAKG,GAAQV,EAAS,CACnBC,KAAM,oBACNU,QAASD,MAEZE,OAAOC,IACJA,EAAIJ,OAAOF,MAAM0E,IACbjF,EAAS,CACLC,KAAO,oBACPU,QAAUsE,YGmDfJ,CAAwC3B,GCzBxCmC,MA5CI,IAEf,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,WAAY,EACZC,OAAQ,EACRC,cAAc,EACdC,gBAAgB,EAChBtD,UAAU,YALZ,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBuD,OAAO,IAAxB,SACE,cAAC,IAAD,UACE,qBACEvD,UAAU,gBACVwD,IAAI,4DACJC,IAAI,oBAIV,cAAC,IAAD,CAAiBF,OAAO,IAAxB,SACE,cAAC,IAAD,UACE,qBACEvD,UAAU,gBACVwD,IAAI,4DACJC,IAAI,qBAIV,cAAC,IAAD,CAAiBF,OAAO,IAAxB,SACE,cAAC,IAAD,UACE,qBACEvD,UAAU,gBACVwD,IAAI,2DACJC,IAAI,2BClCpB,MAAMC,UAAgB5E,YAClBW,SACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAQgD,KAAO,IAAf,UACI,0CACA,cAAC,EAAD,IACA,qDAEJ,cAAC,IAAD,CAAQA,KAAO,IAAf,SACA,cAAC,IAAD,CAAQ/C,MAAM,SAAS+C,KAAO,KAA9B,6BAULiB,Q,kBCrBf,MAAMC,UAAe7E,YAAW,eAAD,oBAC3BC,MAAQ,CACJC,WAAY,GACZ4E,SAAU1F,aAAa2F,QAAQ,aAHR,KAU3B5E,eAAiBD,GAAc,IAC3BE,KAAKC,UAASC,IAAS,CACnBJ,WAAYI,EAAUJ,aAAeA,EAAaA,EAAa,OAZ5C,KAe3BK,cAAgBC,GAAU,KAAO,MACrBN,EAAeE,KAAKH,MAApBC,WACRO,OAAOC,SAAS,EAAG,GACnBR,IAAeM,GAAUJ,KAAKC,SAAS,CAAEH,WAAY,MAbzD8E,oBACQ5E,KAAKH,MAAM6E,UACX1E,KAAKsC,MAAMuC,WAcnBtE,SAAU,MACET,EAAeE,KAAKH,MAApBC,WAKOE,KAAKD,eAAe,sBAInC,OACI,8BACI,eAAC,IAAD,CAAWS,MAAM,mBAAmBC,MAAI,EAACC,OAAO,KAAKC,MAAM,MAAMC,WAAS,EAA1E,UACI,eAAC,IAAD,CAAgBC,KAAK,IAAIC,UAAU,wBAAnC,UACI,cAAC,IAAD,CAASC,KAAG,EAACC,KAAK,WAAWC,MAAO,CAAEC,OAAQ,SAAUC,MAAO,YAC/D,wBAAQL,UAAU,eAAlB,2BAEJ,cAAC,IAAD,CACIM,QAASpB,KAAKD,eAAe,wBAEjC,cAAC,IAAD,CAAasB,GAAG,qBAAqBC,OAAQxB,EAAYyB,QAAM,EAA/D,SACI,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIsD,OAAK,EACLrD,GAAG,IACHL,QAASpB,KAAKG,cAAc,sBAHhC,SAKI,8CAGR,cAAC,IAAD,UACI,cAAC,IAAD,CACIiB,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,WAFP,SAII,iDAGR,cAAC,IAAD,UACI,cAAC,IAAD,CACIL,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,UAFP,SAII,mDAGR,cAAC,IAAD,UACI,cAAC,IAAD,CACIL,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,YAFP,SAII,kDAIR,cAAC,IAAD,UACI,cAAC,IAAD,CACIL,QAASpB,KAAKG,cAAc,sBAC5BsB,GAAG,UAFP,SAII,2DAWrBgD,Q,QC5Ff,MAAMM,UAA0BnF,YAAW,eAAD,oBAQxCoF,SAAW,EAAGC,IAAGC,IAAGC,MAAKC,MAAKC,YAC5BrF,KAAKsC,MAAMgD,QAAQH,EAAIC,IAGzB7E,SACE,OAEE,aADA,CACA,OAAKU,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAArC,SACE,cAAC,IAAD,CAAgBC,QAASpB,KAAKgF,SAC5BO,iBAAkB,CAAEC,IAAK,2CACzBC,cAAezF,KAAKsC,MAAMoD,OAC1BC,YAAa3F,KAAKsC,MAAMsD,UAnB5Bb,EACGc,aAAe,CACpBH,OAAQ,CACNP,IAAK,KACLC,IAAK,QAEPQ,KAAM,IA0BKb,QC9Bf,MAAMe,UAAiBlG,YAAW,eAAD,oBAC/BC,MAAQ,CACNkG,KAAM,GACNZ,IAAK,GACLa,KAAM,IAJuB,KAO/BC,mBAAsBhE,IACpBxC,QAAQC,IAAIuC,EAAEC,OAAOgE,MAAM,IAC3B,IAAIH,EAAO9D,EAAEC,OAAOgE,MAAM,GACtBC,EAAS,IAAIC,WAEjBD,EAAOE,cAAcN,GACrBI,EAAOG,iBAAiB,QAAQ,KAC9BtG,KAAKC,UAASJ,GAAK,2BACdA,GADc,IAEjBwC,KAAM,CACJ0D,KAAM,CAACI,EAAOI,aAGlB,MAAMC,EAAML,EAAOI,OAGnBvG,KAAKsC,MAAMmE,UAAUD,MAErB,IAzB2B,KA6B/BxE,aAAgBC,IAGd,IAFA,IAAIyE,EAAUzE,EAAEC,OAAOwE,QACnBvE,EAAQ,GACHwE,EAAI,EAAGC,EAAIF,EAAQxC,OAAQyC,EAAIC,EAAGD,IACrCD,EAAQC,GAAGE,UACb1E,EAAMW,KAAK4D,EAAQC,GAAGxE,OAG1BnC,KAAKsC,MAAMwE,aAAa3E,IArCK,KA2C/B4E,WAAa,CAAC5B,EAAKC,KACjBpF,KAAKC,SAAS,CAAEkF,IAAKA,EAAKa,KAAMZ,KAJlChD,eACEpC,KAAKsC,MAAM0E,WAAWhH,KAAKH,MAAMkG,KAAM/F,KAAKsC,MAAMO,SAOpDtC,SAEE,OACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,gCACE,0CACA,uBACA,eAAC,IAAD,CAAQ0G,YAAA,EAAR,UACE,cAAC,IAAD,CAAU/D,MAAM,YAAYtE,KAAK,OAAOyE,UAAQ,EAACN,MAAM,UACvD,cAAC,IAAD,CAAUG,MAAM,gBAAgBtE,KAAK,OAAOyE,UAAQ,EAACN,MAAM,UAC3D,cAAC,IAAD,CAAUnE,KAAK,WAAWsE,MAAM,kCAAkCgE,KAAK,MAEvE,yFACA,yBAAQC,aAAW,EAACC,MAAM,gCAAgCC,UAAU,EAAMlF,MAAOnC,KAAKsC,MAAMgF,oBAAqBnE,SAAUnD,KAAKuH,gBAAhI,UACE,wBAAQpF,MAAO,EAAf,6BACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,4BAGF,sBAEA,8CACA,uBAAOgB,SAAUnD,KAAKiG,mBACpBrH,KAAK,OACLkC,UAAU,oBACVO,GAAG,wBAGP,qBAAKiD,IAAKtE,KAAKH,MAAMkG,KAAM5E,MAAM,MAAMD,OAAO,aAIlD,eAAC,IAAD,WACE,8CACA,uBACA,cAAC,EAAD,CAAmBoE,QAAStF,KAAK+G,aAHnC,QAIQ/G,KAAKH,MAAMsF,IAJnB,UAI+BnF,KAAKH,MAAMmG,WAG5C,cAAC,IAAD,CAAQxF,MAAM,YAAYY,QAASpB,KAAKoC,aAAxC,wBAEF,cAAC,EAAD,QAKO0D,QC5EA0B,MA3BF,EAAGC,OAAMC,cAElB,eAAC,IAAD,WACE,eAAC,IAAD,CAASzG,MAAO,CAAEE,MAAO,SAAzB,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASwG,OAAO,GAAG3G,KAAK,OAAOC,MAAO,CAAE2G,QAAS,UACjD,oBAAI3G,MAAO,CAAE2G,QAAS,OAAtB,SAAgCH,EAAKI,kBAGzC,cAAC,IAAD,CAAc/G,UAAU,YAAYwD,IAAKmD,EAAKK,SAAUC,OAAK,IAC7D,eAAC,IAAD,WACE,cAAC,IAAD,UAAeN,EAAKO,WACpB,eAAC,IAAD,8BACmBP,EAAKQ,cACtB,uBAFF,uBAGuBR,EAAKS,cAG5B,cAAC,IAAD,CAAQC,SAAO,EAAC3H,MAAM,OAAOY,QAAS,IAAMsG,EAASD,EAAKpG,IAA1D,wBAGJ,0B,gBCbN,MAAM+G,UAAaxI,YAAW,eAAD,oBACzBC,MAAQ,CACJwI,cAAe,GACf3D,SAAU1F,aAAa2F,QAAQ,YAC/B2D,SAAUtJ,aAAa2F,QAAQ,YAC/B4D,SAAU,GACVC,OAAQ,GACRC,aAAc,GACdC,eAAe,GARM,KAUzB1G,aAAgBC,IACZjC,KAAKC,SAAS,CAAE,CAACgC,EAAEC,OAAOb,IAAKY,EAAEC,OAAOC,SAXnB,KAazBwG,cAAgB,KACZ3I,KAAKsC,MAAMO,QAAQC,KAAK,YAdH,KAgBzB8F,WAAc3G,IACVjC,KAAK6I,cAjBgB,KAmBzBA,WAAa,KACT,IAAIL,EAASxI,KAAKsC,MAAMwG,SAASC,QAAO9D,GAAKA,EAAE+C,SAASgB,cAAcC,SAASjJ,KAAKH,MAAM2I,UAC1FxI,KAAKC,SAAS,CAAEwI,aAAcD,EAAQE,eAAe,KArBhC,KAuBzBQ,SAAYC,IACRnJ,KAAKsC,MAAMO,QAAQC,KAAK,gBAAkBqG,IAG9C5I,SACI,IAAI6I,EAGJ,OAFIpJ,KAAKsC,MAAMwG,WACXM,EAAiBpJ,KAAKsC,MAAMwG,SAASO,KAAIpE,GAAK,eAAC,IAAD,CAAQ1B,KAAK,IAAb,cAAkB,cAAC,EAAD,CAAMmE,SAAU1H,KAAKkJ,SAAUzB,KAAMxC,IAAvD,UAE9C,gCACI,cAAC,EAAD,CAAQJ,SAAU7E,KAAK2I,gBACvB,uBACA,eAAC,IAAD,WACI,kDACA,cAAC,IAAD,CAAUtH,GAAG,SAAS8B,SAAUnD,KAAKgC,aAAcsH,UAAWtJ,KAAK4I,WAAYzG,MAAOnC,KAAKH,MAAM2I,OAAQtF,MAAM,WAC/G,cAAC,IAAD,UACwC,IAAnClD,KAAKH,MAAM4I,aAAavE,QAAgBlE,KAAKH,MAAM4I,aAAaY,KAAIpE,GAE7D,cAAC,IAAD,CAAQ1B,KAAK,IAAb,SAAiB,cAAC,EAAD,CAAMmE,SAAU1H,KAAKkJ,SAAUzB,KAAMxC,UAIjEjF,KAAKH,MAAM6I,eACR,cAAC,IAAD,UACI,eAAC,IAAD,WACI,kDACA,cAAC,IAAD,UACKU,SAKjB,uBACA,uBAEA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,8CAEA,cAAC,IAAD,YAMZ,cAAC,EAAD,QAmBDG,kBAAQ/F,aATC3D,IACb,CACHiJ,SAAUjJ,EAAMpB,UAAU+K,QAAQC,UAOOC,2BAAiB,CAAC,CAAEC,WAAY,WAAlEJ,CAA+EnB,GC3F9F,MAAMwB,UAAehK,YAAW,eAAD,oBAC3BC,MAAQ,CACJ6E,SAAU,GACV5C,MAAO,GACPC,SAAU,GACV8H,YAAa,IALU,KAO3B7H,aAAgBC,IACZjC,KAAKC,SAAS,CAAE,CAACgC,EAAEC,OAAOb,IAAKY,EAAEC,OAAOC,SAE5CC,eACI3C,QAAQC,IAAIM,KAAKH,MAAMiK,UACvB9J,KAAKsC,MAAMyH,aAAa/J,KAAKH,MAAMiK,UAEvCtH,0BAA0BC,GAGI,IAAvBA,EAAUuH,UACThK,KAAKsC,MAAMO,QAAQC,KAAK,UAEhCvC,SACI,OACI,eAAC,IAAM0J,SAAP,WACI,cAACC,EAAD,IACA,uBACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ3G,KAAK,KAAb,SACI,yDAEJ,cAAC,IAAD,CAAQN,GAAG,IAAX,SACK,iCACG,sBAAKnC,UAAU,YAAf,UACI,cAAC,IAAD,CAAUoC,MAAM,WAAW7B,GAAG,WAAW8B,SAAUnD,KAAKgC,aAAchB,KAAK,WAAWoC,OAAK,EAACxE,KAAK,OAAOyE,UAAQ,EAACN,MAAM,QACnHO,QAAQ,QAAQnB,MAAOnC,KAAKH,MAAM6E,WACtC,cAAC,IAAD,CAAUxB,MAAM,gBAAgB7B,GAAG,QAAQL,KAAK,WAAWmC,SAAUnD,KAAKgC,aAAcoB,OAAK,EAACxE,KAAK,QAAQyE,UAAQ,EAACN,MAAM,QACtHO,QAAQ,QAAQnB,MAAOnC,KAAKH,MAAMiC,QACtC,cAAC,IAAD,CAAUoB,MAAM,WAAW7B,GAAG,WAAWL,KAAK,OAAOoC,OAAK,EAACD,SAAUnD,KAAKgC,aAAcpD,KAAK,WAAWyE,UAAQ,EAAClB,MAAOnC,KAAKH,MAAMkC,WACnI,cAAC,IAAD,CAAUmB,MAAM,qBAAqB7B,GAAG,cAAcL,KAAK,OAAOmC,SAAUnD,KAAKgC,aAAcoB,OAAK,EAACxE,KAAK,WAAWyE,UAAQ,EAAClB,MAAOnC,KAAKH,MAAMgK,iBAEpJ,qBAAK/I,UAAU,cAAf,SACI,cAAC,IAAD,CAAQqJ,OAAQnK,KAAKoC,aAAapC,MAAOQ,MAAM,MAAM+C,KAAK,KAAK1C,KAAK,8BAApE,iCAMpB,uBACA,cAAC,EAAD,QAWD2C,mBALS3D,IAAK,CACzBmK,SAAUnK,EAAM4D,KAAKC,YAIe,CAAEqG,aXpBbpG,GAAahF,IACtCE,MAAM,qEAAqE,CACvEC,OAAQ,OACRC,QAAU,CACN,eAAgB,oBAEpB6E,KAAMC,KAAKC,UAAUH,KAEpBzE,MAAMC,IAEH,GADAM,QAAQC,IAAI,yCACRP,EAAI4E,GAAI,MAAM5E,EAClB,OAAOA,EAAIC,UAEdF,MAAKG,GAAQV,EAAS,CACnBC,KAAM,kBACNU,QAASD,MAEZE,OAAOC,IACJC,QAAQC,IAAIF,GACZA,EAAIJ,OAAOF,MAAM0E,IAEbjF,EAAS,CACLC,KAAO,aACPU,QAAUsE,YWHfJ,CAA2CoG,GC/C3CQ,MAjBK,EAAEC,aAElB,8BACE,eAAC,IAAD,CAASpJ,MAAO,CAAEE,MAAO,SAAzB,UACE,cAAC,IAAD,CAAcL,UAAU,YAAYwD,IAAK+F,EAAQC,QAASvC,OAAK,IAC/D,eAAC,IAAD,WACE,eAAC,IAAD,oBAAqBsC,EAAQE,QAC7B,eAAC,IAAD,qBACUF,EAAQvI,MADlB,IACyB,uBADzB,aAEauI,EAAQG,oBCRhB,MAAMC,UAAmB7K,YAAW,eAAD,oBAE9CC,MAAQ,CACJwC,KAAM,CACF0D,KAAM,KAJgC,KAQ9CE,mBAAsBhE,IAClBxC,QAAQC,IAAIuC,EAAEC,OAAOgE,MAAM,IAC3B,IAAIH,EAAO9D,EAAEC,OAAOgE,MAAM,GACtBC,EAAS,IAAIC,WAEjBD,EAAOE,cAAcN,GACrBI,EAAOG,iBAAiB,QAAQ,KACxBtG,KAAKC,UAASJ,GAAK,2BACZA,GADY,IAEfwC,KAAM,CACF0D,KAAM,CAACI,EAAOI,aAGtB,MAAMC,EAAML,EAAOI,OAGnBvG,KAAKsC,MAAMmE,UAAUD,MAEzB,IAKRjG,SACI,OACI,cAAC,IAAD,CAAec,GAAG,OACdqJ,OACI,sBAAK5J,UAAU,cAAf,UACI,uBAAOqC,SAAUnD,KAAKiG,mBAClBrH,KAAK,OACLkC,UAAU,oBACVO,GAAG,qBAEP,uBAAOP,UAAU,oBAAoB6J,QAAQ,mBAA7C,4BAKRC,mBAAmB,UCvCnC,MAAMC,UAAgBjL,YAAW,eAAD,oBAC9BC,MAAQ,CACNiL,IAAK,GACLP,KAAMvL,aAAa2F,QAAQ,YAC3B7C,MAAO9C,aAAa2F,QAAQ,SAC5B2F,QAAS,GACTE,SAAU,IANkB,KAQ9BxI,aAAgBC,IACdjC,KAAKC,SAAS,CACZ,CAACgC,EAAEC,OAAOb,IAAKY,EAAEC,OAAOC,SAVE,KAa9B4I,gBAAmBC,IACjBhL,KAAKC,SAAS,CAAEqK,QAASU,KAdG,KAgB9BC,YAAc,KACZ,MAAM5I,EAAO,CACXP,MAAO9B,KAAKH,MAAMiC,MAClBoJ,OAAQlL,KAAKH,MAAM0K,KACnBzC,SAAU9H,KAAKH,MAAMyK,QACrBQ,IAAK9K,KAAKH,MAAMiL,KAGlB9K,KAAKsC,MAAM6I,cAAc9I,EAAM,yBAxBH,KA2B9B+I,OAAS,IAAMpL,KAAKsC,MAAMO,QAAQC,KAAK,KACvCvC,SACE,OACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgD,KAAK,IAAb,SACE,cAAC,EAAD,CAAa8G,QAASrK,KAAKH,UAE7B,eAAC,IAAD,CAAQ0D,KAAK,IAAb,UACE,gDACA,uBACA,cAAC,IAAD,CAAUlC,GAAG,OAAO6B,MAAM,OAAOf,MAAOnC,KAAKH,MAAM0K,KAAMvJ,KAAK,OAAOmC,SAAUnD,KAAKgC,eAEpF,cAAC,IAAD,CAAUX,GAAG,MAAM6B,MAAM,YAAYlC,KAAK,OAAOmB,MAAOnC,KAAKH,MAAMiL,IAAK3H,SAAUnD,KAAKgC,eAEvF,cAAC,IAAD,CAAUX,GAAG,QAAQ6B,MAAM,iBAAiBlC,KAAK,WAAWmB,MAAOnC,KAAKH,MAAMiC,MAAOqB,SAAUnD,KAAKgC,eAEpG,cAAC,IAAD,CAAUX,GAAG,WAAW6B,MAAM,WAAWlC,KAAK,aAAamB,MAAOnC,KAAKH,MAAM2K,SAAUrH,SAAUnD,KAAKgC,eAEtG,cAAC,EAAD,CAAYyE,UAAWzG,KAAK+K,kBAE5B,eAAC,IAAD,WACE,cAAC,IAAD,CAAQxH,KAAK,IAAb,SACE,cAAC,IAAD,CACEnC,QAASpB,KAAKiL,YACdzK,MAAM,OACNM,UAAU,0BAHZ,8BAOF,cAAC,IAAD,CAAQyC,KAAK,IAAb,SACE,cAAC,IAAD,CACEnC,QAASpB,KAAKoL,OACd5K,MAAM,MACNM,UAAU,0BAHZ,gCAWV,uBACA,cAAC,EAAD,QAUOyI,kBAAQ/F,aALC3D,IACf,CACL4D,KAAM5D,EAAMpB,UAAU+K,QAAQ/F,QAGc,CAAE0H,cdlBrB,CAAC9L,EAAKgC,IAAO1C,IAC3BJ,EAASE,YACjBkL,WAAW,SAAS0B,IAAIhK,GAAIiK,OAA/B,eAA2CjM,IAC3CV,EAAS,CACLC,KAAM,sBccsD8K,2BAAiB,CAAC,CAAEC,WAAY,WAArFJ,CAAkGsB,GC3FjH,MAAMU,EAAoB,EAAGC,UAAW,8BAAK,qBAAKlH,IAAI,mFAAmFpD,OAAO,KAAKC,MAAM,KAAKoD,IAAI,OAEpK,MAAMkH,UAAkB7L,YAStBW,SACE,OAEE,aADA,CACA,OAAKU,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAArC,SACE,cAAC,IAAD,CACEoE,iBAAkB,CAAEC,IAAK,2CACzBC,cAAezF,KAAKsC,MAAMoD,OAC1BC,YAAa3F,KAAKsC,MAAMsD,KAH1B,SAKG5F,KAAKsC,MAAM6C,KACV,cAAC,EAAD,CACEA,IAAKnF,KAAKsC,MAAM6C,IAChBC,IAAKpF,KAAKsC,MAAM0D,KAChBwF,KAAMxL,KAAKsC,MAAMoJ,eAtBzBD,EACG5F,aAAe,CACpBH,OAAQ,CACNP,IAAK,KACLC,IAAK,QAEPQ,KAAM,IAyBK6F,QCxBf,MAAME,UAAoB/L,YAAW,eAAD,oBAChCC,MAAQ,CACJ+L,OAAQ5L,KAAKsC,MAAMuJ,MAAMC,OAAOzH,QAFJ,KAIhC0H,YAAeC,IACX,MAAM3J,EAAO,CACT4J,UAAWtK,KAAKuK,MAChB7H,OAAQ2H,EAAK3K,GACb2G,SAAUgE,EAAKhE,SACfmE,UAAWnN,aAAa2F,QAAQ,YAChCyH,cAAe,WAEnBpM,KAAKsC,MAAM+J,WAAWL,EAAK3K,IAC3BrB,KAAKsC,MAAMgK,WAAWjK,GACtBrC,KAAKsC,MAAMO,QAAQC,KAAK,YAG5BvC,SACI,OACI,gCACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,uBAEA,eAAC,IAAD,WACKP,KAAKsC,MAAMwG,UAAY9I,KAAKsC,MAAMwG,SAASO,KAAIpE,GAExC,eAAC,IAAD,CAAQ1B,KAAK,IAAb,UACI,8CACA,uBACA,eAAC,IAAD,CAAStC,MAAO,CAAEE,MAAO,SAAzB,UACI,cAAC,IAAD,CAAcL,UAAU,YAAYwD,IAAKW,EAAE6C,SAAUC,OAAK,IAC1D,eAAC,IAAD,WACI,eAAC,IAAD,WAAe9C,EAAE+C,SAAjB,IAA4B/C,EAAEsH,YAC9B,eAAC,IAAD,WACKtH,EAAEuH,YADP,IACoB,uBACfvH,EAAEuF,YAEP,cAAC,IAAD,CAAQpJ,QAAS,IAAMpB,KAAK+L,YAAY9G,GAAIzE,MAAM,OAAlD,oCAOpB,eAAC,IAAD,CAAQ+C,KAAK,IAAb,UACI,+CACA,uBACCvD,KAAKsC,MAAMmK,iBAAmBzM,KAAKsC,MAAMmK,gBAAgBpD,KAAIpE,GAEtD,gCACI,cAAC,EAAD,CAAWyG,QAASzG,EAAEyH,QAASvH,IAAKF,EAAE0H,YAAF,KAAuB3G,KAAMf,EAAE0H,YAAF,QACjE,uBAFJ,YAGc1H,EAAEyH,sBAOpC,uBACA,uBACA,cAAC,EAAD,QAsBDnD,kBAAQ/F,aAjBC,CAAC3D,EAAO+M,KAC5B,IAAIvL,EAAKuL,EAASf,MAAMC,OAAOzH,OAC3BwI,EAAO,GACX,GAAIhN,EAAMpB,UAAU+K,QAAQC,OAAS5J,EAAMpB,UAAU+K,QAAQiD,gBAAiB,CAC1EI,EAAOhN,EAAMpB,UAAU+K,QAAQC,MAC/B,IAAIqD,EAAaD,EAAK9D,QAAO9D,GAAKA,EAAE5D,KAAOA,IAC3C,IAAImJ,EAAWsC,EAAW,GAAGtC,SAG7B,MAAO,CACH1B,SAAUgE,EACVL,gBAJW5M,EAAMpB,UAAU+K,QAAQiD,gBACX1D,QAAO9D,GAAKA,EAAE8H,OAASvC,QASX,CAAE6B,WCvEvBhL,GAAO1C,IACnBJ,EAASE,YACjBkL,WAAW,SAAS0B,IAAIhK,GAAIiK,OAAO,CAAEpD,WAAY,sBACpDvJ,EAAS,CACLC,KAAM,iBDmEgD0N,WC/DnCU,GAAarO,IACzBJ,EAASE,YACjBkL,WAAW,YAAYsD,IAA1B,eAAmCD,IACnCrO,EAAS,CACLC,KAAM,oBD2D+D8K,2BAAiB,CAAC,CAAEC,WAAY,SAAW,CAAEA,WAAY,qBAAvHJ,CAA8IoC,GErF7J,MAAMuB,UAAwBtN,YAE5BgF,oBACE5E,KAAKsC,MAAM5D,cAGX6B,SACE,OAAO,gCACL,uDAEIP,KAAKsC,MAAMmB,KAAKgG,MAAMJ,KAAI2C,GACtB,+BACCA,EAAKhE,SACLgE,EAAK9D,aAFK8D,EAAK3H,UAOxB,cAAC,IAAD,CAAM5C,GAAK,WAAX,SACA,mDAoBS+B,mBAfQ3D,IAAD,CACpB4D,KAAM5D,EAAM4D,SAQa9E,GAAYwO,YACrC,CAAEzO,eACJC,IAIe6E,CAA6C0J,GChD/C,MAAME,UAAexN,YAChCgF,oBACI5F,aAAaqO,QACbrN,KAAKsC,MAAMO,QAAQC,KAAK,UAE5BvC,SACI,OACI,yBCyBG+M,MA/BC,EAAGC,YAAW1I,cAK1B,eAAC,IAAD,WACE,cAAC,IAAD,UACE,+BACE,2CACA,gDACA,wCACA,gDAGJ,cAAC,IAAD,UACG0I,GAAaA,EAAUxE,QAAO9D,GAAyB,YAApBA,EAAEmH,gBAA6B/C,KAAIpE,GAEnE,+BACE,6BAAKA,EAAE+C,WACP,6BAAK/C,EAAEgH,YACP,6BAAKhH,EAAEmH,gBACP,6BAAI,cAAC,IAAD,CAAQ7I,KAAK,KAAKnC,QAAS,KAAMsG,OApB/BrD,EAoBwCY,EAAEZ,YAnB1DQ,EAASR,GADX,IAAkBA,GAoBmD7D,MAAM,OAA3D,mCCUHgN,OA/BS,EAAGD,YAAW1I,cAKlC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,+BACE,2CACA,gDACA,wCACA,gDAGJ,cAAC,IAAD,UACG0I,GAAaA,EAAUxE,QAAO9D,GAAyB,qBAApBA,EAAEmH,gBAAsC/C,KAAIpE,GAE5E,+BACE,6BAAKA,EAAE+C,WACP,6BAAK/C,EAAEgH,YACP,6BAAKhH,EAAEmH,gBACP,6BAAI,cAAC,IAAD,CAAQ7I,KAAK,KAAKnC,QAAS,KAAMsG,OApB/BrD,EAoBwCY,EAAEZ,YAnB1DQ,EAASR,GADX,IAAkBA,GAoBmD7D,MAAM,OAA3D,mCCdlB,MAAMiN,WAAqB7N,YAAW,eAAD,oBACjCC,MAAQ,CACJ6E,SAAU1F,aAAa2F,QAAQ,aAFF,KAIjCuE,SAAY7E,IACRrE,KAAKsC,MAAMO,QAAQC,KAAK,gBAAkBuB,IAE9C9D,SACI,OACI,gCACI,cAAC,EAAD,IACA,uBACA,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAQgD,KAAK,KAAb,UACI,gDACA,cAAC,EAAD,CAASsB,SAAU7E,KAAKkJ,SAAUqE,UAAWvN,KAAKsC,MAAMoL,qBAGhE,cAAC,IAAD,UACI,eAAC,IAAD,CAAQnK,KAAK,KAAb,UACI,2DACA,cAAC,GAAD,CAAiBsB,SAAU7E,KAAKkJ,SAAUqE,UAAWvN,KAAKsC,MAAMoL,wBAI5E,uBACA,cAAC,EAAD,QAkBDnE,mBAAQ/F,aAZC3D,IACpB,IAAI6E,EAAW1F,aAAa2F,QAAQ,YAChCkI,EAAO,GACX,GAAIhN,EAAMpB,UAAU+K,QAAQmE,SAAU,CAGlC,OAFAd,EAAOhN,EAAMpB,UAAU+K,QAAQmE,SAExB,CACHD,cAFgBb,EAAK9D,QAAO9D,GAAKA,EAAEkH,YAAczH,SAOZgF,2BAAiB,CAAC,CAAEC,WAAY,cAAlEJ,CAAkFkE,ICzCjG,MAAMG,WAAeC,IAAMjO,UAEzBW,SACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuE,OAAK,EAACgJ,KAAK,IAAIC,UAAW3F,IACjC,cAAC,IAAD,CAAO0F,KAAK,SAASC,UAAWC,IAChC,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWvJ,IAClC,cAAC,IAAD,CAAOsJ,KAAK,eAAeC,UAAWE,MACtC,cAAC,IAAD,CAAOH,KAAK,YAAYC,UAAWjI,IACnC,cAAC,IAAD,CAAOgI,KAAK,UAAUC,UAAWnE,IACjC,cAAC,IAAD,CAAOkE,KAAK,WAAWC,UAAWlD,IAClC,cAAC,IAAD,CAAOiD,KAAO,uBAAuBC,UAAaG,IAClD,cAAC,IAAD,CAAOJ,KAAO,2BAA2BC,UAAab,IACtD,cAAC,IAAD,CAAOY,KAAO,UAAUC,UAAaX,IACrC,cAAC,IAAD,CAAOU,KAAK,UAAUC,UAAWN,KACjC,cAAC,IAAD,CACElN,OAAQ,WACN,OAAO,kDAQJqN,U,UCxCf,MAAMO,GAAY,GAwCHC,OApCM,CAACvO,EAAQsO,GAAWE,KAErC,OAAQA,EAAOzP,MACX,IAAK,YACD,OAAO,2BACAiB,GADP,IAEI4J,MAAO4E,EAAO/O,UAEtB,IAAK,cAIL,IAAK,cAIL,IAAK,eAIL,IAAK,WAIL,IAAK,aAIL,IAAK,wBACD,OAAO,eACAO,GAEX,QACI,OAAOA,I,SCrCnB,MAAMsO,GAAY,CACdG,SAAS,EACTC,YAAa,GACbZ,SAAU,GACVa,cAAe,GACf9K,SAAU,IAuCC+K,OApCK,CAAC5O,EAAQsO,GAAWE,KACpC,OAAQA,EAAOzP,MACX,IAAK,oBACD,OAAO,2BACAiB,GADP,IAEI6D,SAAU2K,EAAO/O,UAEzB,IAAK,sBACD,OAAO6O,GAEX,IAAK,WACD,OAAO,aACHO,eAAe,EACfJ,SAAS,GACND,EAAO/O,SAElB,IAAK,kBACD,OAAO,2BACAO,GADP,IAEI6D,SAAU2K,EAAO/O,UAGzB,IAAK,iBACD,OAAO,eACAO,GAGX,IAAK,eACD,OAAO,2BACAA,GADP,IAEIyO,SAAS,IAEjB,QACI,OAAOzO,IC9BJ8O,OANKC,YAAgB,CAChC5C,KAAO6C,GACPpQ,UAAWqQ,oBACXrL,KAAMgL,KCAV,MACMM,GAAa,CAACC,KAAMC,kBAAkB,CAACC,0BAAaC,gCAM3CC,OALDC,YAAYV,GAFL,GAGjBpF,YAAQ+F,eAAmBP,IAAaQ,0BAAehR,KCD3D,MAAMiR,WAAY5P,YAAW,eAAD,oBAC1BC,MAAQ,CACNC,WAAY,IAEdS,SAAU,MACAT,EAAeE,KAAKH,MAApBC,WACR,OACE,cAAC,IAAD,CAAUsP,MAAOK,GAAjB,SACE,cAAC,6BAAD,CAA4BlR,SAAUA,EAAUR,OAAQA,EAAQ2R,wBAAyBA,2BAAyB/Q,SAAU8Q,GAAM9Q,SAAlI,SACE,cAAC,IAAD,UACE,sBAAKmC,UAAU,SAAf,UACGhB,GAAc6P,QACf,sBAAM1O,MAAO,CAAE2O,UAAW,QAA1B,SACE,cAAC,GAAD,gBAUDJ,UCvBf,MAAMK,GAAcC,QACW,cAA7BzP,OAAOmK,SAASuF,UAEe,UAA7B1P,OAAOmK,SAASuF,UAEhB1P,OAAOmK,SAASuF,SAASlE,MACvB,2DA6BN,SAASmE,GAAgBC,GACvBC,UAAUC,cACPnG,SAASiG,GACT/Q,MAAKkR,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBzQ,QACfqQ,UAAUC,cAAcM,WAK1BhR,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBH,OAAMwD,IACLtD,QAAQsD,MAAM,4CAA6CA,MC7DjE2N,IAASnQ,OAAO,cAAC,GAAD,IAASoQ,SAASC,eAAe,SDWlC,WACb,GAA6C,kBAAmBV,UAAW,CAGzE,GADkB,IAAIW,IAAIC,GAAwBzQ,OAAOmK,UAC3CuG,SAAW1Q,OAAOmK,SAASuG,OAIvC,OAGF1Q,OAAOiG,iBAAiB,QAAQ,KAC9B,MAAM2J,EAAK,UAAMa,GAAN,sBAENjB,GAwCX,SAAiCI,GAE/BpR,MAAMoR,GACH/Q,MAAKwE,IAGkB,MAApBA,EAASsN,SACuD,IAAhEtN,EAAS3E,QAAQkS,IAAI,gBAAgBC,QAAQ,cAG7ChB,UAAUC,cAAcgB,MAAMjS,MAAKkR,IACjCA,EAAagB,aAAalS,MAAK,KAC7BmB,OAAOmK,SAAS6G,eAKpBrB,GAAgBC,MAGnB1Q,OAAM,KACLE,QAAQC,IACN,oEAzDA4R,CAAwBrB,GAHxBD,GAAgBC,OCzBxBsB,K","file":"static/js/main.dca7122d.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nexport const config = {\r\n    apiKey: \"AIzaSyDgUKSulrYq50m8_Tle1uvLsH_LZV7Mlss\",\r\n    authDomain: \"secondlove-cc51b.firebaseapp.com\",\r\n    projectId: \"secondlove-cc51b\",\r\n    storageBucket: \"secondlove-cc51b.appspot.com\",\r\n    messagingSenderId: \"1046105738786\",\r\n    appId: \"1:1046105738786:web:e8dbd8bc929024205f447b\",\r\n    measurementId: \"G-EXKKW36RRM\"\r\n  };\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore()\r\n\r\nexport default firebase\r\n","import firebase from '../Firebase/fbConfig'\r\nexport const loginUser = (userData) => dispatch => {\r\n    \r\n     fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/login',{\r\n        method: 'POST',\r\n        headers : {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    })\r\n        .then((res) => {\r\n            if(!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => dispatch({\r\n            type: 'SET_AUTHENTICATED',\r\n            payload: data\r\n        }))\r\n        .catch((err) => {\r\n            err.json().then((body)=>{\r\n                dispatch({\r\n                    type : 'SET_AUTHENTICATED',\r\n                    payload : body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: 'LOADING_USER' });\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/user',{\r\n        method: 'GET',\r\n        headers : {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : localStorage.FBIdToken\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        dispatch({\r\n          type: 'SET_USER',\r\n          payload: data\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  \r\nexport const registerUser = (userData) => dispatch => {\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/signup',{\r\n        method: 'POST',\r\n        headers : {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    })\r\n        .then((res) => {\r\n            console.log(\"bro register user response coming in\")\r\n            if(!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => dispatch({\r\n            type: 'USER_REGISTERED',\r\n            payload: data\r\n        }))\r\n        .catch((err) => {\r\n            console.log(err)\r\n            err.json().then((body)=>{\r\n                //console.log(body)\r\n                dispatch({\r\n                    type : 'SET_ERRORS',\r\n                    payload : body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\nexport const updateProfile = (data,id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(id).update({ ...data })\r\n    dispatch({\r\n        type: \"UPDATE_PROFILE\"\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass GuestNavbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n    };\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        const { collapseID } = this.state;\r\n        return (\r\n            <div>\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        \r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/signup'\r\n                                >\r\n                                    <strong>Signup</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/login'\r\n                                >\r\n                                    <strong>Login</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GuestNavbar","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='rgba-pink-strong' >\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='https://www.MDBootstrap.com'> MDBootstrap.com </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { loginUser } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport GuestNavbar from '../components/GuestNavBar';\r\nimport Footer from '../components/Footer';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        // email: \"lovecode@email.com\",\r\n        // password: \"123456\"\r\n        const form = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.loginUser(form)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.logintoken.token) {\r\n            localStorage.setItem(\"token\", nextProps.logintoken.token)\r\n            localStorage.setItem(\"username\", this.state.email)\r\n            localStorage.setItem(\"usertype\", \"Normal User\")\r\n            this.props.history.push('/')\r\n        }\r\n        else if (nextProps.logintoken.error) {\r\n            this.setState({ email: '', password: '' })\r\n            alert(nextProps.logintoken.error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <MDBContainer >\r\n                    <br/>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <h3 className=\"pink-text\">Welcome to SecondLove</h3>\r\n                            <hr />\r\n                            <form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\" success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" icon=\"lock\" group type=\"password\" onChange={this.handleChange} id=\"password\" validate value={this.state.password} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onClick={this.handleSubmit} color=\"red\" size=\"lg\">Login</MDBBtn>\r\n                                    <p></p>\r\n                                    <p> <a href=\"http://localhost:3000/signup\" >Click here to sign up if don't have an account</a></p>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br/>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    logintoken: state.user.response\r\n});\r\n\r\n//export default LoginPage\r\nexport default connect(mapStateToProps, { loginUser })(LoginPage)","import React from \"react\";\r\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer } from\r\n\"mdbreact\";\r\n\r\nconst ListingPic = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={3}\r\n        showControls={true}\r\n        showIndicators={true}\r\n        className=\"z-depth-1\"\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem itemId=\"1\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"2\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\"\r\n                alt=\"Second slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"3\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default ListingPic;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol,MDBBtn } from \"mdbreact\";\r\nimport ListingPic from '../components/ListingPic'\r\n\r\nclass Listing extends Component {\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol size = \"8\">\r\n                        <h2>Listing </h2>\r\n                        <ListingPic/>\r\n                        <h5>Item description</h5>\r\n                    </MDBCol>\r\n                    <MDBCol size = \"4\">\r\n                    <MDBBtn color=\"unique\" size = \"lg\">Request</MDBBtn>\r\n\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n            </MDBContainer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default Listing","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"username\")\r\n    };\r\n    componentDidMount(){\r\n        if(!this.state.username)\r\n            this.props.navigate()\r\n    }\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n              id='sidenav-overlay'\r\n              style={{ backgroundColor: 'transparent' }}\r\n              onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n          );\r\n        \r\n        return (\r\n            <div>\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='/'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Home</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/profile'\r\n                                >\r\n                                    <strong>Profile</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/status'\r\n                                >\r\n                                    <strong>My Orders</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/donation'\r\n                                >\r\n                                    <strong>Donation</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Logout</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\" /></div>;\r\n\r\nclass DonationGoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n  mapClick = ({ x, y, lat, lng, event }) => {\r\n    this.props.latlong(lat,lng)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact onClick={this.mapClick}\r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          {/* <AnyReactComponent\r\n            lat=\"1.29\"\r\n            lng=\"103.85\"\r\n            text=\"KPKB\"\r\n          /> */}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DonationGoogleMap;","import { MDBCol, MDBContainer, MDBRow, MDBInput, MDBBtn } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport { donateItem } from '../Redux/Actions/itemAction'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport DonationGoogleMap from '../components/DonationGoogleMap'\r\n\r\nclass Donation extends Component {\r\n  state = {\r\n    file: '',\r\n    lat: '',\r\n    long: ''\r\n  }\r\n\r\n  onChangeHandleFile = (e) => {\r\n    console.log(e.target.files[0])\r\n    var file = e.target.files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.addEventListener(\"load\", () => {\r\n      this.setState(state => ({\r\n        ...state,\r\n        form: {\r\n          file: [reader.result]\r\n        }\r\n      }));\r\n      const url = reader.result;\r\n      //console.log(\"#####\", url);\r\n      //Call Parent Component Method\r\n      this.props.picUpload(url)\r\n    },\r\n      false\r\n    );\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    var options = e.target.options;\r\n    var value = [];\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    this.props.someCallback(value);\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.props.donateItem(this.state.file, this.props.history) // componentDidMount\r\n  }\r\n  getLatLong = (lat, lng) => {\r\n    this.setState({ lat: lat, long: lng })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol>\r\n              <div>\r\n                <h3>Donation</h3>\r\n                <hr />\r\n                <MDBCol col-md-1>\r\n                  <MDBInput label=\"Item name\" type=\"text\" validate error=\"wrong\" />\r\n                  <MDBInput label=\"Item category\" type=\"text\" validate error=\"wrong\" />\r\n                  <MDBInput type=\"textarea\" label=\"Enter the item description here\" rows=\"5\" />\r\n\r\n                  <h6>Select Category (Press Ctrl to select multiple options)</h6>\r\n                  <select placeholder class=\"browser-default custom-select\" multiple={true} value={this.props.arrayOfOptionValues} onChange={this.multipleOptions}>\r\n                    <option value={1}>Home and Living</option>\r\n                    <option value={2}>Sports</option>\r\n                    <option value={3}>Electronics</option>\r\n                  </select>\r\n\r\n                  <p></p>\r\n\r\n                  <h6>Upload Image</h6>\r\n                  <input onChange={this.onChangeHandleFile}\r\n                    type=\"file\"\r\n                    className=\"custom-file-input\"\r\n                    id=\"inputGroupFile01\"\r\n                  />\r\n                </MDBCol>\r\n                <img src={this.state.file} width='500' height='500' />\r\n\r\n              </div>\r\n            </MDBCol>\r\n            <MDBCol>\r\n              <h3>Map Location</h3>\r\n              <hr />\r\n              <DonationGoogleMap latlong={this.getLatLong} />\r\n              Lat: {this.state.lat} Long: {this.state.long}\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBBtn color=\"mdb-color\" onClick={this.handleSubmit}>Upload </MDBBtn>\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Donation","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBCardHeader, MDBBadge, MDBIcon, MDBRow } from 'mdbreact';\r\n\r\nconst Card = ({ post, viewItem }) => {\r\n  return (\r\n    <MDBCol>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardHeader>\r\n          <MDBRow>\r\n            <MDBIcon border='' icon=\"user\" style={{ padding: '10px' }} />\r\n            <h5 style={{ padding: '5px' }}>{post.userHandle}</h5>\r\n          </MDBRow>\r\n        </MDBCardHeader>\r\n        <MDBCardImage className=\"img-fluid\" src={post.imageUrl} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{post.itemName}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Item condition: {post.itemCondition}\r\n            <br />\r\n            Item ballot status: {post.itemStatus}\r\n            {/* Item id: {post.itemId} */}\r\n          </MDBCardText>\r\n          <MDBBtn outline color=\"pink\" onClick={() => viewItem(post.id)}>View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <br />\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact'\r\nimport CarouselPage from '../components/CarouselPage'\r\nimport Card from '../components/Card'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport PropTypes from 'prop-types'\r\nimport { searchItem } from '../Redux/Actions/itemAction'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        FilteredPosts: '',\r\n        username: localStorage.getItem(\"username\"),\r\n        usertype: localStorage.getItem(\"usertype\"),\r\n        itemList: [],\r\n        search: '',\r\n        searchResult: [],\r\n        searchDisplay: true\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    validateLogin = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    onKeyPress = (e) => {\r\n        this.searchitem()\r\n    }\r\n    searchitem = () => {\r\n        var search = this.props.itemlist.filter(x => x.itemName.toLowerCase().includes(this.state.search))\r\n        this.setState({ searchResult: search, searchDisplay: false })\r\n    }\r\n    Navigate = (itemID) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemID)\r\n    }\r\n\r\n    render() {\r\n        let PopularListing;\r\n        if (this.props.itemlist)\r\n            PopularListing = this.props.itemlist.map(x => <MDBCol size=\"4\"> <Card viewItem={this.Navigate} post={x} /> </MDBCol>)\r\n        return (\r\n            <div>\r\n                <Navbar navigate={this.validateLogin} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <h3>Search for items</h3>\r\n                    <MDBInput id=\"search\" onChange={this.handleChange} onKeyDown={this.onKeyPress} value={this.state.search} label=\"Search\" />\r\n                    <MDBRow>\r\n                        {this.state.searchResult.length !== 0 && this.state.searchResult.map(x => {\r\n                            return (\r\n                                <MDBCol size=\"4\"><Card viewItem={this.Navigate} post={x} /></MDBCol>\r\n                            )\r\n                        })}\r\n                    </MDBRow>\r\n                    {this.state.searchDisplay &&\r\n                        <MDBRow>\r\n                            <MDBCol>\r\n                                <h3>Popular Listings</h3>\r\n                                <MDBRow>\r\n                                    {PopularListing}\r\n                                </MDBRow>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    }\r\n                    <br />\r\n                    <br />\r\n\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n                            <h3> Categories </h3>\r\n\r\n                            <MDBRow>\r\n\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nMain.propTypes = {\r\n    getAvailableItems: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n}\r\n\r\n\r\n//connect is a function, returns a higher order component\r\n//higher order component is wrapping the home component\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'items' }]))(Main)","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { registerUser } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport GuestNavBar from '../components/GuestNavBar'\r\nimport Footer from '../components/Footer'\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        cfmpassword: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    handleSubmit() {\r\n        console.log(this.state.customer);\r\n        this.props.registerUser(this.state.customer)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //When post is sent and received response\r\n        //move to login page\r\n        if(nextProps.register !== 0)\r\n            this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <GuestNavBar />\r\n                <br />\r\n                <MDBContainer >\r\n                    <MDBRow >\r\n                        <MDBCol size='12' >\r\n                            <h1>Create a new account!</h1>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            {<form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Username\" id=\"username\" onChange={this.handleChange} icon=\"user-alt\" group type=\"text\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.username} />\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" id=\"password\" icon=\"lock\" group onChange={this.handleChange} type=\"password\" validate value={this.state.password} />\r\n                                    <MDBInput label=\"Confirmed Password\" id=\"cfmpassword\" icon=\"lock\" onChange={this.handleChange} group type=\"password\" validate value={this.state.cfmpassword} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onlick={this.handleSubmit(this)} color=\"red\" size=\"lg\" href=\"http://localhost:3000/login\">Sign Up</MDBBtn>\r\n                                </div>\r\n                            </form>}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    register: state.user.response\r\n})\r\n\r\n//export default Signup\r\nexport default connect(mapStateToProps, { registerUser })(Signup)","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst ProfileCard = ({profile}) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profile.picture} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>Name: {profile.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {profile.email} <br />\r\n            Location: {profile.location}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileCard;","import React, { Component } from 'react'\r\nimport { MDBInputGroup, MDBBtn } from 'mdbreact';\r\n\r\n\r\nexport default class Uploadfile extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            file: []\r\n        }\r\n    }\r\n\r\n    onChangeHandleFile = (e) => {\r\n        console.log(e.target.files[0])\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n                this.setState(state => ({\r\n                    ...state,\r\n                    form: {\r\n                        file: [reader.result]\r\n                    }\r\n                }));\r\n                const url = reader.result;\r\n                //console.log(\"#####\", url);\r\n                //Call Parent Component Method\r\n                this.props.picUpload(url)\r\n            },\r\n            false\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBInputGroup id='file'\r\n                inputs={\r\n                    <div className=\"custom-file\">\r\n                        <input onChange={this.onChangeHandleFile}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                            Choose file\r\n                        </label>\r\n                    </div>\r\n                }\r\n                containerClassName=\"mb-3\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import { MDBCol, MDBContainer, MDBRow, MDBBtn, MDBInput } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport ProfileCard from '../components/Profile/ProfileCard'\r\nimport UploadFile from '../components/Profile/Uploadfile'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { updateProfile } from '../Redux/Actions/userAction'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    bio: '',\r\n    name: localStorage.getItem(\"username\"),\r\n    email: localStorage.getItem(\"email\"),\r\n    picture: '',\r\n    location: '',\r\n  }\r\n  handleChange = (e) => { // to change state everytime you type -- question: value\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n  PictureUploaded = (pic) => {\r\n    this.setState({ picture: pic });\r\n  }\r\n  onSubmitAll = () => {\r\n    const form = {\r\n      email: this.state.email,\r\n      handle: this.state.name,\r\n      imageUrl: this.state.picture,\r\n      bio: this.state.bio\r\n    }\r\n    //Need userId\r\n    this.props.updateProfile(form, \"3bmzDSlDHt7Ys2dllIuO\")\r\n  }\r\n\r\n  GoBack = () => this.props.history.push('/')\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol size=\"5\">\r\n              <ProfileCard profile={this.state} />\r\n            </MDBCol>\r\n            <MDBCol size=\"7\">\r\n              <h3>Update Profile</h3>\r\n              <hr />\r\n              <MDBInput id='name' label=\"Name\" value={this.state.name} icon=\"user\" onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='bio' label=\"Biography\" icon=\"user\" value={this.state.bio} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='email' label=\"E-mail address\" icon=\"envelope\" value={this.state.email} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='location' label=\"Location\" icon=\"map-marker\" value={this.state.location} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <UploadFile picUpload={this.PictureUploaded} />\r\n\r\n              <MDBRow>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.onSubmitAll}\r\n                    color=\"pink\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Update Profile\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.GoBack}\r\n                    color=\"red\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Back\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.firestore.ordered.user,\r\n  }\r\n}\r\nexport default compose(connect(mapStateToProps, { updateProfile }), firestoreConnect([{ collection: 'users' }]))(Profile)","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\"/></div>;\r\n\r\nclass GoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          {this.props.lat &&\r\n            <AnyReactComponent\r\n              lat={this.props.lat}\r\n              lng={this.props.long}\r\n              text={this.props.address}\r\n            />\r\n            }\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleMap;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport GoogleMap from '../components/GoogleMap'\r\nimport { updateItem, addRequest } from '../Redux/Actions/itemAction'\r\n\r\n\r\nclass ItemDetails extends Component {\r\n    state = {\r\n        itemid: this.props.match.params.itemId,\r\n    };\r\n    ReserveItem = (item) => {\r\n        const form = {\r\n            createdAt: Date.now(),\r\n            itemId: item.id,\r\n            itemName: item.itemName,\r\n            recipient: localStorage.getItem(\"username\"),\r\n            requestStatus: \"Pending\"\r\n        }\r\n        this.props.updateItem(item.id)\r\n        this.props.addRequest(form)\r\n        this.props.history.push('/status')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n\r\n                    <MDBRow>\r\n                        {this.props.itemlist && this.props.itemlist.map(x => {\r\n                            return (\r\n                                <MDBCol size=\"6\">\r\n                                    <h2>Item Details</h2>\r\n                                    <hr />\r\n                                    <MDBCard style={{ width: \"22rem\" }}>\r\n                                        <MDBCardImage className=\"img-fluid\" src={x.imageUrl} waves />\r\n                                        <MDBCardBody>\r\n                                            <MDBCardTitle>{x.itemName} {x.category}</MDBCardTitle>\r\n                                            <MDBCardText>\r\n                                                {x.description} <br />\r\n                                                {x.location}\r\n                                            </MDBCardText>\r\n                                            <MDBBtn onClick={() => this.ReserveItem(x)} color=\"pink\">Place Order</MDBBtn>\r\n                                        </MDBCardBody>\r\n                                    </MDBCard>\r\n                                </MDBCol>\r\n                            )\r\n                        })}\r\n\r\n                        <MDBCol size=\"6\">\r\n                            <h2>Item Location</h2>\r\n                            <hr />\r\n                            {this.props.collectionpoint && this.props.collectionpoint.map(x => {\r\n                                return (\r\n                                    <div>\r\n                                        <GoogleMap address={x.Address} lat={x.Coordinates['_lat']} long={x.Coordinates['_long']} />\r\n                                        <br />\r\n                                        Address: {x.Address}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.itemId;\r\n    let list = []\r\n    if (state.firestore.ordered.items && state.firestore.ordered.collectionpoint) {\r\n        list = state.firestore.ordered.items\r\n        let singleitem = list.filter(x => x.id === id)\r\n        var location = singleitem[0].location\r\n        let mappoint = state.firestore.ordered.collectionpoint;\r\n        let collectpoint = mappoint.filter(x => x.Name === location)\r\n        return {\r\n            itemlist: singleitem,\r\n            collectionpoint: collectpoint\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { updateItem, addRequest }), firestoreConnect([{ collection: 'items' }, { collection: 'collectionpoint' }]))(ItemDetails)","import firebase from '../Firebase/fbConfig'\r\n\r\nexport const getAvailableItems = () => dispatch => {\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/items')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_ITEMS',\r\n            payload: data\r\n        }))\r\n\r\n}\r\n\r\nexport const adduser = (record) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"users\").add({\r\n            ...record\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'USER_ADD'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'PendingCollection' })\r\n    dispatch({\r\n        type: \"UPDATE_ITEM\"\r\n    })\r\n}\r\n\r\nexport const addRequest = (formdata) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"requests\").add({ ...formdata })\r\n    dispatch({\r\n        type: \"ITEM_REQUEST\"\r\n    })\r\n}\r\nexport const deleteItem = id => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).delete()\r\n    dispatch({\r\n        type: \"DELETE_ITEM\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const ballotItem = (itemId) => dispatch => {\r\n    fetch(`https://us-central1-secondlove-cc51b.cloudfunctions.net/api/item/${itemId}/ballotItem`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.FBIdToken\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            dispatch({\r\n                type: 'GET_ITEMS',\r\n                payload: data\r\n            })\r\n            dispatch({ type: 'CLEAR_ERRORS' })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            err.json().then((body) => {\r\n                dispatch({\r\n                    type: 'SET_ERRORS',\r\n                    payload: body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux'\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../Redux/Actions/userAction';\r\nimport GoogleMap from '../components/GoogleMap';\r\n\r\nclass DonationSummary extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getUserData()\r\n  }\r\n\r\n    render() {\r\n      return <div>\r\n        <h1>donation summary page</h1>\r\n        {\r\n            this.props.user.items.map(item => (\r\n                <h2 key = {item.itemId}>\r\n                {item.itemName}\r\n                {item.itemStatus}\r\n                </h2>\r\n            ))\r\n        }\r\n        \r\n        <Link to = \"/profile\">\r\n        <button>go back</button>\r\n        </Link>\r\n      </div>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n  });\r\n  \r\n  DonationSummary.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\n  const mapDispatchToProps = dispatch => bindActionCreators(\r\n    { getUserData }\r\n, dispatch);\r\n\r\n  \r\n  //export default connect(mapStateToProps)(Profile);\r\n  export default connect(mapStateToProps, mapDispatchToProps)(DonationSummary)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Pending = ({ myRequest, navigate }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {myRequest && myRequest.filter(x => x.requestStatus === \"Pending\").map(x => {\r\n          return (\r\n            <tr>\r\n              <td>{x.itemName}</td>\r\n              <td>{x.createdAt}</td>\r\n              <td>{x.requestStatus}</td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.itemId)} color=\"pink\">View Item</MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Pending;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst PendingApproval = ({ myRequest, navigate }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {myRequest && myRequest.filter(x => x.requestStatus === \"Pending Approval\").map(x => {\r\n          return (\r\n            <tr>\r\n              <td>{x.itemName}</td>\r\n              <td>{x.createdAt}</td>\r\n              <td>{x.requestStatus}</td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.itemId)} color=\"pink\">View Item</MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default PendingApproval;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport Pending from '../components/PendingStatus/Pending'\r\nimport PendingApproval from '../components/PendingStatus/PendingApproval'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nclass MyItemStatus extends Component {\r\n    state = {\r\n        username: localStorage.getItem(\"username\")\r\n    }\r\n    Navigate = (itemId) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemId)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Pending Status</h2>\r\n                            <Pending navigate={this.Navigate} myRequest={this.props.myrequestlist} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <h2>Item Pending for Approval</h2>\r\n                            <PendingApproval navigate={this.Navigate} myRequest={this.props.myrequestlist} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    let username = localStorage.getItem(\"username\")\r\n    let list = []\r\n    if (state.firestore.ordered.requests) {\r\n        list = state.firestore.ordered.requests\r\n        let letmyRequests = list.filter(x => x.recipient === username)\r\n        return {\r\n            myrequestlist: letmyRequests\r\n        }\r\n    }\r\n\r\n}\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'requests' }]))(MyItemStatus)","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from '../pages/LoginPage';\r\nimport Listing from '../pages/Listing';\r\nimport BallotItems from '../pages/BallotItems';\r\nimport Donation from '../pages/Donation';\r\nimport Main from '../pages/Main'\r\nimport Signup from '../pages/Signup'\r\nimport Profile from '../pages/Profile'\r\nimport itemDetails from '../pages/ItemDetails'\r\nimport DonationSummary from '../pages/DonationSummary'\r\nimport Logout from '../pages/Logout'\r\nimport MyItemStatus from '../pages/MyItemStatus'\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Main} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/listing' component={Listing} />\r\n        <Route path='/ballotItems' component={BallotItems} />\r\n        <Route path='/donation' component={Donation} />\r\n        <Route path='/signup' component={Signup} />\r\n        <Route path='/profile' component={Profile} />\r\n        <Route path = '/itemDetails/:itemId' component = {itemDetails}/>\r\n        <Route path = '/profile/donationSummary' component = {DonationSummary}/>\r\n        <Route path = '/logout' component = {Logout}/>\r\n        <Route path='/status' component={MyItemStatus} />\r\n        <Route\r\n          render={function () {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n\r\n}\r\n\r\nconst itemReducers = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SEARCH_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'ITEM_REQUEST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'ADD_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'FETCH_POST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'GET_COLLECTION_POINTS':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default itemReducers;","const initState = {\r\n    loading: false,\r\n    credentials: {},\r\n    requests: [],\r\n    notifications: [],\r\n    response: []\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_AUTHENTICATED':\r\n            return {\r\n                ...state,\r\n                response: action.payload\r\n            }\r\n        case 'SET_UNAUTHENTICATED':\r\n            return initState\r\n\r\n        case 'SET_USER':\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case 'USER_REGISTERED':\r\n            return {\r\n                ...state,\r\n                response: action.payload\r\n            }\r\n\r\n        case 'UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case 'LOADING_USER':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport userReducer from './userReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    item : itemReducer,\r\n    firestore: firestoreReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\nimport firebase from '../Firebase/fbConfig'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\n\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk.withExtraArgument({getFirebase, getFirestore})];\r\nconst store = createStore(RootReducer, initialState,\r\n    compose(applyMiddleware(...middleWare) ,reduxFirestore(firebase)\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport firebase, { config } from './Redux/Firebase/fbConfig'\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n  render() {\r\n    const { collapseID } = this.state;\r\n    return (\r\n      <Provider store={Store}>\r\n        <ReactReduxFirebaseProvider firebase={firebase} config={config} createFirestoreInstance={createFirestoreInstance} dispatch={Store.dispatch}>\r\n          <Router>\r\n            <div className='flyout'>\r\n              {collapseID && overlay}\r\n              <main style={{ marginTop: '4rem' }}>\r\n                <Routes />\r\n              </main>\r\n            </div>\r\n          </Router>\r\n        </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}