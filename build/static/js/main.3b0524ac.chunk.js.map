{"version":3,"sources":["Redux/Firebase/fbConfig.jsx","components/GuestNavBar.jsx","components/Footer.jsx","pages/LoginPage.jsx","Redux/Actions/userAction.jsx","components/ListingPic.jsx","pages/Listing.jsx","components/Navbar.jsx","components/Donation/DonationGoogleMap.jsx","components/Profile/Uploadfile.jsx","Redux/Actions/itemAction.jsx","pages/Donation.jsx","components/Main/Card.jsx","components/Main/CategoriesBtn.jsx","pages/Main.jsx","pages/Signup.jsx","components/Profile/ProfileCard.jsx","pages/Profile.jsx","components/GoogleMap.jsx","pages/ItemDetails.jsx","pages/Logout.jsx","components/PendingStatus/Pending.jsx","components/PendingStatus/PendingApproval.jsx","components/PendingStatus/Collected.jsx","pages/MyItemStatus.jsx","components/ApprovalPage/Approve.jsx","pages/Approval.jsx","components/PendingStatus/Approved.jsx","components/PendingStatus/Rejected.jsx","pages/MyDonateItem.jsx","router/Routes.js","Redux/Reducers/itemReducer.js","Redux/Reducers/userReducer.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","GuestNavbar","Component","state","collapseID","toggleCollapse","this","setState","prevState","closeCollapse","collID","window","scrollTo","render","color","dark","expand","fixed","scrolling","href","className","fab","icon","style","height","width","onClick","id","isOpen","navbar","right","to","Footer","Date","getFullYear","LoginPage","email","password","handleChange","e","target","value","handleSubmit","sha256","props","UserLogin","componentWillReceiveProps","nextProps","loginResponse","localStorage","setItem","loginID","handle","isAdmin","bio","location","imageUrl","history","push","center","md","label","onChange","group","type","validate","error","success","size","connect","user","loginCred","userid","dispatch","a","db","collection","where","get","then","snapshot","forEach","x","payload","data","fetchData","ListingPic","activeItem","length","showControls","showIndicators","itemId","src","alt","Listing","Navbar","username","getItem","admin","componentDidMount","navigate","exact","AnyReactComponent","text","DonationGoogleMap","bootstrapURLKeys","key","defaultCenter","defaultZoom","zoom","lat","lng","long","name","defaultProps","Uploadfile","form","file","onChangeHandleFile","files","file_size","reader","FileReader","readAsDataURL","addEventListener","result","url","picUpload","alert","inputs","htmlFor","containerClassName","collectItem","doc","update","itemStatus","addRequest","formdata","add","Donation","categories","category","description","itemCondition","PictureUploaded","pic","console","log","GoBack","handleChangeMap","selectedPoint","collectionlist","filter","point","Name","Coordinates","_lat","_long","today","approved","ballotTime","createdAt","toJSON","itemName","requestCount","userHandle","recipient","donateItem","col-md-1","rows","placeholder","class","map","each","outline","compose","itemlist","ordered","items","collectionpoint","record","getState","getFirebase","getFirestore","firestoreConnect","Card","post","viewItem","border","padding","waves","ButtonPage","posts","onSubmit","Main","FilteredPosts","usertype","itemList","search","searchResult","searchDisplay","validateLogin","onKeyPress","searchitem","toLowerCase","includes","Navigate","itemID","FilterPosts","PopularListing","duration","onKeyDown","CategoriesBtn","Signup","cfmpassword","Validate","userRegister","registerUser","Fragment","GuestNavBar","register","response","ProfileCard","profile","picture","Profile","onSubmitAll","updateProfile","users","GoogleMap","address","ItemDetails","itemid","match","params","ReserveItem","item","requestStatus","updateItem","disabled","Address","ownProps","list","singleitem","Logout","clear","Pending","myRequest","filteredData","display","collect","PendingApproval","currentUser","Collected","MyItemStatus","collectitem","Approve","toapprove","toReject","approve","Approval","ApprovalItem","approveItem","RejectItem","rejectItem","Approved","Rejected","MyDonateItem","Routes","React","path","component","Login","BallotItems","itemDetails","initState","itemReducers","action","userReducer","RootReducer","combineReducers","itemReducer","firestoreReducer","middleWare","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","App","Store","createFirestoreInstance","overlay","marginTop","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3b0524ac.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nexport const config = {\r\n    apiKey: \"AIzaSyDgUKSulrYq50m8_Tle1uvLsH_LZV7Mlss\",\r\n    authDomain: \"secondlove-cc51b.firebaseapp.com\",\r\n    projectId: \"secondlove-cc51b\",\r\n    storageBucket: \"secondlove-cc51b.appspot.com\",\r\n    messagingSenderId: \"1046105738786\",\r\n    appId: \"1:1046105738786:web:e8dbd8bc929024205f447b\",\r\n    measurementId: \"G-EXKKW36RRM\"\r\n  };\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore()\r\n\r\nexport default firebase\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass GuestNavbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n    };\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        const { collapseID } = this.state;\r\n        return (\r\n            <div>\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        \r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/signup'\r\n                                >\r\n                                    <strong>Signup</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/login'\r\n                                >\r\n                                    <strong>Login</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GuestNavbar","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='rgba-pink-strong' >\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='https://www.MDBootstrap.com'> MDBootstrap.com </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { UserLogin } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport GuestNavbar from '../components/GuestNavBar';\r\nimport Footer from '../components/Footer';\r\nimport sha256 from 'sha256';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({ password: sha256(this.state.password) })\r\n        this.props.UserLogin(this.state.email)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (!nextProps.loginResponse)\r\n            return\r\n\r\n        if (nextProps.loginResponse.password == this.state.password) {\r\n            localStorage.setItem(\"id\", nextProps.loginID)\r\n            localStorage.setItem(\"username\", this.state.email)\r\n            localStorage.setItem(\"name\", nextProps.loginResponse.handle)\r\n            localStorage.setItem(\"usertype\", nextProps.loginResponse.isAdmin)\r\n            localStorage.setItem(\"bio\", nextProps.loginResponse.bio)\r\n            localStorage.setItem(\"location\", nextProps.loginResponse.location)\r\n            localStorage.setItem(\"image\", nextProps.loginResponse.imageUrl)\r\n            this.props.history.push('/')\r\n        }\r\n\r\n        //Login Failed\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <MDBContainer >\r\n                    <br />\r\n                    <MDBRow center>\r\n                        <MDBCol md=\"12\">\r\n                            <h3 className=\"pink-text\">Welcome to SecondLove</h3>\r\n                            <hr />\r\n                            <form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\" success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" icon=\"lock\" group type=\"password\" onChange={this.handleChange} id=\"password\" validate value={this.state.password} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onClick={this.handleSubmit} color=\"red\" size=\"lg\">Login</MDBBtn>\r\n                                    <p></p>\r\n                                    <p> <a href=\"http://localhost:3000/signup\" >Click here to sign up if don't have an account</a></p>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loginResponse: state.user.loginCred,\r\n    loginID: state.user.userid,\r\n});\r\n\r\n//export default LoginPage\r\nexport default connect(mapStateToProps, { UserLogin })(LoginPage)","import firebase from '../Firebase/fbConfig'\r\n\r\n\r\nexport const UserLogin = (email, password) => dispatch => {\r\n    const fetchData = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection('users').where('email', '==', email).get()\r\n            .then(snapshot => snapshot.forEach(x => {\r\n                dispatch({\r\n                    type: 'USER_LOGIN',\r\n                    payload: x.data(),\r\n                    id: x.id\r\n                })\r\n            }))\r\n\r\n    }\r\n    fetchData()\r\n}\r\n\r\nexport const registerUser = (formdata) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").add({ ...formdata }).then(() => {\r\n        dispatch({\r\n            type: \"REGISTER_USER\"\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport const updateProfile = (data, id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(id).update({ ...data })\r\n    dispatch({\r\n        type: \"UPDATE_PROFILE\"\r\n    })\r\n}","import React from \"react\";\r\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer } from\r\n\"mdbreact\";\r\n\r\nconst ListingPic = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={3}\r\n        showControls={true}\r\n        showIndicators={true}\r\n        className=\"z-depth-1\"\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem itemId=\"1\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"2\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\"\r\n                alt=\"Second slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"3\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default ListingPic;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol,MDBBtn } from \"mdbreact\";\r\nimport ListingPic from '../components/ListingPic'\r\n\r\nclass Listing extends Component {\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol size = \"8\">\r\n                        <h2>Listing </h2>\r\n                        <ListingPic/>\r\n                        <h5>Item description</h5>\r\n                    </MDBCol>\r\n                    <MDBCol size = \"4\">\r\n                    <MDBBtn color=\"unique\" size = \"lg\">Request</MDBBtn>\r\n\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n            </MDBContainer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default Listing","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"username\"),\r\n        admin: localStorage.getItem(\"usertype\")\r\n    };\r\n    componentDidMount() {\r\n        if (!this.state.username)\r\n            this.props.navigate()\r\n    }\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        if (this.state.admin === \"false\") {\r\n            return (\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='/'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Home</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/profile'\r\n                                >\r\n                                    <strong>Profile</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/status'\r\n                                >\r\n                                    <strong>My Orders</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/mydonate'\r\n                                >\r\n                                    <strong>My Donation Items</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/donation'\r\n                                >\r\n                                    <strong>Donation</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Logout</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            )\r\n\r\n        }\r\n        else if (this.state.admin === \"true\") {\r\n            return (\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/profile'\r\n                                >\r\n                                    <strong>Profile</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/approval'\r\n                                >\r\n                                    <strong>Approval</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Logout</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text}) => <div> <img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\" />{text}</div>;\r\n\r\nclass DonationGoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact \r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n                lat={this.props.lat}\r\n                lng={this.props.long}\r\n                text={this.props.name}\r\n              />\r\n        </GoogleMapReact>\r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default DonationGoogleMap\r\n\r\n","import React, { Component } from 'react'\r\nimport { MDBInputGroup, MDBBtn } from 'mdbreact';\r\n\r\n\r\nexport default class Uploadfile extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            file: []\r\n        }\r\n    }\r\n\r\n    onChangeHandleFile = (e) => {\r\n        var file = e.target.files[0];\r\n        let file_size = e.target.files[0].size;\r\n        if (file_size < 1000000) {\r\n            var reader = new FileReader();\r\n\r\n            reader.readAsDataURL(file);\r\n            reader.addEventListener(\"load\", () => {\r\n                this.setState(state => ({\r\n                    ...state,\r\n                    form: {\r\n                        file: [reader.result]\r\n                    }\r\n                }));\r\n                const url = reader.result;\r\n                //console.log(\"#####\", url);\r\n                //Call Parent Component Method\r\n                this.props.picUpload(url)\r\n            },\r\n                false\r\n            );\r\n        }\r\n        //1000000 is 1MB\r\n        else if(file_size > 1000000){\r\n            alert(\"File too big\")\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBInputGroup id='file'\r\n                inputs={\r\n                    <div className=\"custom-file\">\r\n                        <input onChange={this.onChangeHandleFile}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                            Choose file\r\n                        </label>\r\n                    </div>\r\n                }\r\n                containerClassName=\"mb-3\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import firebase from '../Firebase/fbConfig'\r\n\r\nexport const adduser = (record) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"users\").add({\r\n            ...record\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'USER_ADD'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const donateItem = (record) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"items\").add({\r\n            ...record\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'ADD_ITEM'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const approveItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'Approved', approved: true })\r\n    dispatch({\r\n        type: \"APPROVE_ITEM\"\r\n    })\r\n}\r\nexport const updateItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'PendingCollection', recipient: localStorage.getItem(\"userhandle\") })\r\n    dispatch({\r\n        type: \"UPDATE_ITEM\"\r\n    })\r\n}\r\n\r\nexport const collectItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'Collected' })\r\n    dispatch({\r\n        type: \"COLLECT_ITEM\"\r\n    })\r\n}\r\n\r\nexport const addRequest = (formdata) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"requests\").add({ ...formdata })\r\n    dispatch({\r\n        type: \"ITEM_REQUEST\"\r\n    })\r\n}\r\n\r\nexport const rejectItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'Rejected' })\r\n    dispatch({\r\n        type: \"REJECTED_ITEM\"\r\n    })\r\n}\r\n\r\nexport const deleteItem = id => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).delete()\r\n    dispatch({\r\n        type: \"DELETE_ITEM\",\r\n    })\r\n}\r\n\r\nexport const ballotItem = (itemId) => dispatch => {\r\n    fetch(`https://us-central1-secondlove-cc51b.cloudfunctions.net/api/item/${itemId}/ballotItem`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.FBIdToken\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            dispatch({\r\n                type: 'GET_ITEMS',\r\n                payload: data\r\n            })\r\n            dispatch({ type: 'CLEAR_ERRORS' })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            err.json().then((body) => {\r\n                dispatch({\r\n                    type: 'SET_ERRORS',\r\n                    payload: body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\n","import { MDBCol, MDBContainer, MDBRow, MDBInput, MDBBtn, MDBAnimation } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport DonationGoogleMap from '../components/Donation/DonationGoogleMap'\r\nimport Uploadfile from '../components/Profile/Uploadfile'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { donateItem } from '../Redux/Actions/itemAction'\r\n\r\n\r\nclass Donation extends Component {\r\n  state = {\r\n    file: '',\r\n    lat: '',\r\n    long: '',\r\n    categories: [\"home and living\", \"sports\", \"electronic\", \"toys\", \"clothes\", \"luxury\", \"utomobile\"],\r\n    category: 'home and living',\r\n    name: '',\r\n    description: '',\r\n    location: 'The Salvation Army@Jurong',\r\n    itemCondition: 'Well Used'\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    //console.log(this.props.collectionlist)\r\n    console.log(this.state)\r\n  }\r\n\r\n  PictureUploaded = (pic) => {\r\n    console.log(pic);\r\n    this.setState(state => ({\r\n      ...state,\r\n      file: pic\r\n    }))\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //console.log(this.state.name, this.state.description) // to change state everytime you type -- question: value\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n  GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n  handleChangeMap = (e) => {\r\n    //console.log(this.state.name, this.state.description) // to change state everytime you type -- question: value\r\n    var selectedPoint = this.props.collectionlist.filter((point) => point.Name == e.target.value);\r\n    //console.log(selectedPoint);\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      lat: selectedPoint[0].Coordinates._lat,\r\n      long: selectedPoint[0].Coordinates._long\r\n    })\r\n\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    //this.props.donateItem(form) // componentDidMount\r\n    var today = new Date();\r\n\r\n    const form = {\r\n      approved: false,\r\n      ballotTime: '',\r\n      category: this.state.category ? this.state.category : \"home and living\",\r\n      createdAt: today.toJSON(),\r\n      description: this.state.description,\r\n      imageUrl: this.state.file,\r\n      itemCondition: this.state.itemCondition,\r\n      itemName: this.state.name,\r\n      itemStatus: \"pendingApproval\",\r\n      location: this.state.location,\r\n      requestCount: 0,\r\n      userHandle: localStorage.getItem(\"name\"),\r\n      recipient: '',\r\n    }\r\n    this.props.donateItem(form);\r\n    this.setState({\r\n      file: '',\r\n      lat: '',\r\n      long: '',\r\n      category: '',\r\n      name: '',\r\n      description: '',\r\n      location: '',\r\n      itemCondition: ''\r\n    })\r\n    this.props.history.push('/mydonate')\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol>\r\n              <MDBAnimation type='slideInLeft'>\r\n                <div>\r\n                  <h3>Donation</h3>\r\n                  <hr />\r\n                  <MDBCol col-md-1>\r\n                    <MDBInput id='name' label=\"Item name\" type=\"text\" value={this.state.name} onChange={this.handleChange} validate error=\"wrong\" />\r\n                    <MDBInput id='description' type=\"textarea\" value={this.state.description} onChange={this.handleChange} label=\"Enter the item description here\" rows=\"5\" />\r\n\r\n                    <h6>Item Condition</h6>\r\n                    <select placeholder class=\"browser-default custom-select\" value={this.state.location} id=\"itemCondition\" onChange={this.handleChange}>\r\n                      <option value='WellUsed'>Well Used</option>\r\n                      <option value='SlightlyUsed'>Slightly Used</option>\r\n                      <option value='New'>New</option>\r\n                    </select>\r\n\r\n                    <h6>Select Category</h6>\r\n                    <select placeholder class=\"browser-default custom-select\" value={this.state.category} id=\"category\" onChange={this.handleChange}>\r\n                      {this.state.categories.map((each) => {\r\n                        return (\r\n                          <option value={each}>{each}</option>\r\n                        )\r\n                      })}\r\n                    </select>\r\n\r\n                    <p></p>\r\n\r\n                    <h6>Upload Image</h6>\r\n                    <Uploadfile id=\"image\" picUpload={this.PictureUploaded} ></Uploadfile>\r\n                  </MDBCol>\r\n                  {this.state.file && <img src={this.state.file} width='500' height='500' />}\r\n\r\n                </div>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n            <MDBCol>\r\n              <MDBAnimation type='slideInRight'>\r\n                <MDBRow>\r\n                  <h3>Map Location</h3>\r\n                  <hr />\r\n                  <DonationGoogleMap lat={this.state.lat} long={this.state.long} name={this.state.location} />\r\n                </MDBRow>\r\n\r\n                <br />\r\n                <br />\r\n                <MDBRow>\r\n                  <h6>Select Drop-off Location</h6>\r\n                  <hr />\r\n                  <select class=\"browser-default custom-select\" id=\"location\" value={this.state.location} onChange={this.handleChangeMap}>\r\n                    {this.props.collectionlist && this.props.collectionlist.map((point) => {\r\n                      return (\r\n                        <option value={point.Name}>{point.Name}</option>\r\n                      )\r\n                    })}\r\n                  </select>\r\n                Name: {this.state.location}  <br />\r\n                Lat: {this.state.lat} <br />\r\n                Long: {this.state.long}\r\n                </MDBRow>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBBtn outline color=\"pink\" onClick={this.handleSubmit}>Upload </MDBBtn>\r\n          <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itemlist: state.firestore.ordered.items,\r\n    collectionlist: state.firestore.ordered.collectionpoint,\r\n  }\r\n}\r\nexport default compose(connect(mapStateToProps, { donateItem }), firestoreConnect([{ collection: 'items' }, { collection: 'collectionpoint' }]))(Donation)\r\n","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBCardHeader, MDBBadge, MDBIcon, MDBRow } from 'mdbreact';\r\n\r\nconst Card = ({ post, viewItem }) => {\r\n  return (\r\n    <MDBCol>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardHeader>\r\n          <MDBRow>\r\n            <MDBIcon border='' icon=\"user\" style={{ padding: '10px' }} />\r\n            <h5 style={{ padding: '5px' }}>{post.userHandle}</h5>\r\n          </MDBRow>\r\n        </MDBCardHeader>\r\n        <MDBCardImage className=\"img-fluid\" src={post.imageUrl} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{post.itemName}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Item condition: {post.itemCondition}\r\n            <br />\r\n            Item ballot status: {post.itemStatus}\r\n            {/* Item id: {post.itemId} */}\r\n          </MDBCardText>\r\n          <MDBBtn outline color=\"pink\" onClick={() => viewItem(post.id)}>View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <br />\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\n\r\nconst ButtonPage = ({posts}) => {\r\n  let onSubmit = (e) => {\r\n    //console.log(e.target.id);\r\n    posts(e.target.id);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <MDBBtn id = 'home and living' onClick = {onSubmit} outline color=\"pink\">\r\n        <MDBIcon  icon=\"utensils\" className=\"mr-1\" /> Home and Living\r\n      </MDBBtn>\r\n\r\n      <MDBBtn id ='sports' outline color=\"pink\" onClick= {onSubmit}>\r\n        <MDBIcon icon=\"bicycle\" className=\"ml-1\" /> Sports\r\n      </MDBBtn>\r\n\r\n      <MDBBtn id = 'electronic' outline color=\"pink\" onClick={onSubmit}>\r\n        <MDBIcon icon=\"laptop\" className=\"mr-1\" /> Electronic\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'toys' onClick={onSubmit}>\r\n        <MDBIcon icon=\"gamepad\" className=\"mr-1\" /> Toys\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'clothes' onClick={onSubmit}>\r\n        <MDBIcon icon=\"tshirt\" className=\"mr-1\" /> Clothes\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'luxury' onClick={onSubmit}>\r\n        <MDBIcon icon=\"gem\" className=\"mr-1\" /> Luxury\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'automobile' onClick={onSubmit}>\r\n        <MDBIcon icon=\"car-side\" className=\"mr-1\" /> Automobile\r\n      </MDBBtn>\r\n      \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ButtonPage;","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBAnimation } from 'mdbreact'\r\nimport CarouselPage from '../components/CarouselPage'\r\nimport Card from '../components/Main/Card'\r\nimport CategoriesBtn from '../components/Main/CategoriesBtn'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        FilteredPosts: '',\r\n        username: localStorage.getItem(\"username\"),\r\n        usertype: localStorage.getItem(\"usertype\"),\r\n        itemList: [],\r\n        search: '',\r\n        searchResult: [],\r\n        searchDisplay: true\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    validateLogin = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    onKeyPress = (e) => {\r\n        this.searchitem()\r\n    }\r\n    searchitem = () => {\r\n        var search = this.props.itemlist.filter(x => x.itemStatus !== \"Rejected\" && x.itemStatus !== \"pendingApproval\" && x.itemStatus !== 'PendingCollection' && x.itemStatus !== 'Collected' && x.itemName.toLowerCase().includes(this.state.search))\r\n        this.setState({ searchResult: search, searchDisplay: false })\r\n    }\r\n    Navigate = (itemID) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemID)\r\n    }\r\n\r\n    FilterPosts = (id) => {\r\n        //console.log(id);\r\n        let newPosts = this.props.itemlist;\r\n        const result = newPosts.filter(x => x.category == id)\r\n        this.setState(state => ({\r\n            ...state,\r\n            FilteredPosts: result,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let PopularListing;\r\n        if (this.props.itemlist)\r\n            PopularListing = this.props.itemlist.filter(x => x.itemStatus !== \"pendingApproval\" && x.itemStatus !== 'PendingCollection' && x.itemStatus !== 'Collected').map(x => <MDBCol size=\"4\"> <Card viewItem={this.Navigate} post={x} /> </MDBCol>)\r\n        return (\r\n            <div>\r\n                <Navbar navigate={this.validateLogin} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBAnimation type=\"slideInLeft\" duration='1s'>\r\n                        <h3>Search for items</h3>\r\n                        <hr />\r\n                        <MDBInput id=\"search\" onChange={this.handleChange} onKeyDown={this.onKeyPress} value={this.state.search} label=\"Search\" />\r\n                        <MDBRow>\r\n                            {this.state.searchResult.length !== 0 && this.state.searchResult.map(x => {\r\n                                return (\r\n                                    <MDBCol size=\"4\"><Card viewItem={this.Navigate} post={x} /></MDBCol>\r\n                                )\r\n                            })}\r\n\r\n                            <MDBRow>\r\n                                <MDBCol>\r\n                                    <h3> Categories </h3>\r\n                                    <hr/>\r\n                                    <CategoriesBtn posts={this.FilterPosts}></CategoriesBtn>\r\n                                    <MDBRow>\r\n                                        {this.state.FilteredPosts && this.state.FilteredPosts.map(x => {\r\n                                            return (\r\n                                                <MDBCol size=\"4\">\r\n                                                    <Card post={x} viewItem={this.Navigate} />\r\n                                                </MDBCol>\r\n                                            )\r\n                                        })}\r\n                                    </MDBRow>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <br/>\r\n                            <br/>\r\n                        </MDBRow>\r\n                        {this.state.searchDisplay &&\r\n                            <MDBRow>\r\n                                <MDBCol>\r\n                                    <h3>Popular Listings</h3>\r\n                                    <hr/>\r\n                                    <MDBRow>\r\n                                        {PopularListing}\r\n                                    </MDBRow>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        }\r\n                        <br />\r\n                        <br />\r\n\r\n\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n}\r\n\r\n\r\n//connect is a function, returns a higher order component\r\n//higher order component is wrapping the home component\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'items' }]))(Main)","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { registerUser } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport GuestNavBar from '../components/GuestNavBar'\r\nimport Footer from '../components/Footer'\r\nimport sha256 from 'sha256';\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        cfmpassword: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    Validate = () => {\r\n        if (this.state.name === \"\"){\r\n            alert(\"Username cannot be empty\")\r\n            return\r\n        }\r\n        if (this.state.email === \"\"){\r\n            alert(\"Email cannot be empty\")\r\n            return\r\n        }\r\n        if (this.state.cfmpassword !== this.state.password){\r\n            alert(\"Password doesn't match\")\r\n            return\r\n        }\r\n        this.userRegister()\r\n    }\r\n\r\n    userRegister = () => {\r\n        const form = {\r\n            handle: this.state.name,\r\n            email: this.state.email,\r\n            password: sha256(this.state.password)\r\n        }\r\n        this.props.registerUser(form)\r\n        this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <GuestNavBar />\r\n                <br />\r\n                <MDBContainer >\r\n                    <MDBRow >\r\n                        <MDBCol md=\"12\">\r\n                            <h1>Create a new account!</h1>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            <form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Name\" id=\"name\" onChange={this.handleChange} icon=\"user-alt\" group type=\"text\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.name} />\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" id=\"password\" icon=\"lock\" group onChange={this.handleChange} type=\"password\" validate value={this.state.password} />\r\n                                    <MDBInput label=\"Confirm Password\" id=\"cfmpassword\" icon=\"lock\" onChange={this.handleChange} group type=\"password\" validate value={this.state.cfmpassword} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onClick={this.Validate} color=\"red\" size=\"lg\">Sign Up</MDBBtn>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            <br /><br />\r\n                            <img src=\"http://agora.rovernet.eu/wp-content/uploads/2020/01/Registration.jpeg\" className=\"img-fluid\" alt=\"\" />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    register: state.user.response\r\n})\r\n\r\n//export default Signup\r\nexport default connect(mapStateToProps, { registerUser })(Signup)","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst ProfileCard = ({profile}) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profile.picture} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>Name: {profile.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {profile.email} <br />\r\n            Location: {profile.location}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileCard;","import { MDBCol, MDBContainer, MDBRow, MDBBtn, MDBInput, MDBAnimation } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport ProfileCard from '../components/Profile/ProfileCard'\r\nimport UploadFile from '../components/Profile/Uploadfile'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { updateProfile } from '../Redux/Actions/userAction'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    bio: localStorage.getItem(\"bio\"),\r\n    name: localStorage.getItem(\"name\"),\r\n    email: localStorage.getItem(\"username\"),\r\n    picture: localStorage.getItem(\"image\"),\r\n    location: localStorage.getItem('location'),\r\n  }\r\n\r\n  handleChange = (e) => { // to change state everytime you type -- question: value\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n  PictureUploaded = (pic) => {\r\n    this.setState({ picture: pic });\r\n  }\r\n  onSubmitAll = () => {\r\n    const form = {\r\n      email: this.state.email,\r\n      handle: this.state.name,\r\n      imageUrl: this.state.picture,\r\n      bio: this.state.bio,\r\n      location: this.state.location\r\n    }\r\n    //Need userId\r\n    this.props.updateProfile(form, localStorage.getItem(\"id\"))\r\n\r\n    localStorage.setItem(\"username\", this.state.email)\r\n    localStorage.setItem(\"name\", this.state.name)\r\n    localStorage.setItem(\"bio\", this.state.bio)\r\n    localStorage.setItem(\"location\", this.state.location)\r\n    localStorage.setItem(\"image\", this.state.picture)\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  GoBack = () => this.props.history.push('/')\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol size=\"5\">\r\n              <MDBAnimation type=\"slideInLeft\">\r\n              <ProfileCard profile={this.state} />\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n            <MDBCol size=\"7\">\r\n            <MDBAnimation type=\"slideInRight\">\r\n              <h3>Update Profile</h3>\r\n              <hr />\r\n              <MDBInput id='name' label=\"Name\" value={this.state.name} icon=\"user\" onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='bio' label=\"Biography\" icon=\"user\" value={this.state.bio} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='email' label=\"E-mail address\" icon=\"envelope\" value={this.state.email} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='location' label=\"Location\" icon=\"map-marker\" value={this.state.location} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <UploadFile picUpload={this.PictureUploaded} />\r\n\r\n              <MDBRow>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.onSubmitAll}\r\n                    outline color=\"pink\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Update Profile\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.GoBack}\r\n                    outline color=\"green\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Back\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.firestore.ordered.users,\r\n  }\r\n}\r\nexport default compose(connect(mapStateToProps, { updateProfile }), firestoreConnect([{ collection: 'users' }]))(Profile)","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\"/></div>;\r\n\r\nclass GoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          {this.props.lat &&\r\n            <AnyReactComponent\r\n              lat={this.props.lat}\r\n              lng={this.props.long}\r\n              text={this.props.address}\r\n            />\r\n            }\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleMap;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport GoogleMap from '../components/GoogleMap'\r\nimport { updateItem, addRequest } from '../Redux/Actions/itemAction'\r\n\r\n\r\nclass ItemDetails extends Component {\r\n    state = {\r\n        itemid: this.props.match.params.itemId,\r\n    };\r\n    ReserveItem = (item) => {\r\n        var today = new Date();\r\n        const form = {\r\n            createdAt: today.toJSON(),\r\n            itemId: item.id,\r\n            itemName: item.itemName,\r\n            recipient: localStorage.getItem(\"username\"),\r\n            requestStatus: \"Pending\" //pending(request) == pendingcollection(item)\r\n        }\r\n        this.props.updateItem(item.id) //update itemstatus to pendingcollection\r\n        this.props.addRequest(form)\r\n        this.props.history.push('/status')\r\n    }\r\n\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n\r\n                    <MDBRow>\r\n                        {this.props.itemlist && this.props.itemlist.map(x => {\r\n                            return (\r\n                                <MDBCol size=\"6\">\r\n                                    <h2>Item Details</h2>\r\n                                    <hr />\r\n                                    <MDBCard style={{ width: \"22rem\" }}>\r\n                                        <MDBCardImage className=\"img-fluid\" src={x.imageUrl} waves />\r\n                                        <MDBCardBody>\r\n                                            <MDBCardTitle>{x.itemName} <br/> {\"Category: \" + x.category}</MDBCardTitle>\r\n                                            <MDBCardText>\r\n                                                {x.description} <br />\r\n                                                {x.location}\r\n                                            </MDBCardText>\r\n                                            {((x.itemStatus == \"Collected\" || x.itemStatus == \"PendingCollection\") && <MDBBtn onClick={() => this.ReserveItem(x)} outline color=\"pink\" disabled > Ordered </MDBBtn>)  }\r\n                                            {((x.itemStatus !== \"Collected\" && x.itemStatus !== \"PendingCollection\") && <MDBBtn onClick={() => this.ReserveItem(x)} outline color=\"pink\" > Place Order </MDBBtn>)  }\r\n                                        </MDBCardBody>\r\n                                    </MDBCard>\r\n                                </MDBCol>\r\n                            )\r\n                        })}\r\n\r\n                        <MDBCol size=\"6\">\r\n                            <h2>Item Location</h2>\r\n                            <hr />\r\n                            {this.props.collectionpoint && this.props.collectionpoint.map(x => {\r\n                                return (\r\n                                    <div>\r\n                                        <GoogleMap address={x.Address} lat={x.Coordinates['_lat']} long={x.Coordinates['_long']} />\r\n                                        <br />\r\n                                        Address: {x.Address}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBBtn outline color=\"green\" onClick={this.GoBack} >  Back\r\n                       </MDBBtn>\r\n                </MDBContainer>\r\n                <br />\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.itemId;\r\n    let list = []\r\n    if (state.firestore.ordered.items && state.firestore.ordered.collectionpoint) {\r\n        list = state.firestore.ordered.items\r\n        let singleitem = list.filter(x => x.id === id)\r\n        console.log(\"id: \"+ id)\r\n        console.log(singleitem)\r\n        var location = singleitem[0].location\r\n        let mappoint = state.firestore.ordered.collectionpoint;\r\n        let collectpoint = mappoint.filter(x => x.Name === location)\r\n        return {\r\n            itemlist: singleitem,\r\n            collectionpoint: collectpoint\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { updateItem, addRequest }), firestoreConnect([{ collection: 'items' }, { collection: 'collectionpoint' }]))(ItemDetails)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Pending = ({ myRequest, navigate,collectItem }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n\r\n  function collect(itemId){\r\n    collectItem(itemId)\r\n  };\r\n \r\n  let filteredData = myRequest.filter(x => x.itemStatus === \"PendingCollection\" && x.userHandle === localStorage.getItem(\"name\"))\r\n  let display = filteredData.map(x => { //need to call userhandle by account \r\n    return (\r\n      <tr>\r\n        <td>{x.itemName}</td>\r\n        <td>{x.createdAt}</td>\r\n        <td>{x.itemStatus}</td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => collect(x.id)} outline color=\"pink\">Collect Item</MDBBtn></td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n          <th>Collected</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n      {(filteredData.length !== 0) ? display : <React.Fragment>No Data</React.Fragment>}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Pending;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\n\r\nconst PendingApproval = ({ myRequest, navigate, currentUser }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n  //console.log(myRequest)\r\n  let filteredData = myRequest.filter(x => x.approved === false && x.itemStatus === \"pendingApproval\" && x.userHandle === localStorage.getItem(\"name\"))\r\n  let display = filteredData.map(x => { //need to call userhandle by account \r\n    return (\r\n      <tr>\r\n        <td>{x.itemName}</td>\r\n        <td>{x.createdAt}</td>\r\n        <td>{x.itemStatus}</td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {(filteredData.length !== 0) ? display : <React.Fragment>No Data</React.Fragment> }\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default PendingApproval\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Collected = ({ myRequest, navigate, collectItem }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n  let filteredData = myRequest.filter(x => x.itemStatus === \"Collected\" && x.userHandle === localStorage.getItem(\"name\"))\r\n  let display = filteredData.map(x => { //need to call userhandle by account \r\n    return (\r\n      <tr>\r\n        <td>{x.itemName}</td>\r\n        <td>{x.createdAt}</td>\r\n        <td>{x.itemStatus}</td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n     \r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n      {(filteredData.length !== 0) ? display : <React.Fragment>No Data</React.Fragment>}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Collected;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBAnimation } from \"mdbreact\";\r\nimport Pending from '../components/PendingStatus/Pending'\r\nimport PendingApproval from '../components/PendingStatus/PendingApproval'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { collectItem } from '../Redux/Actions/itemAction'\r\nimport Collected from '../components/PendingStatus/Collected';\r\n\r\n\r\nclass MyItemStatus extends Component {\r\n    state = {\r\n        username: localStorage.getItem(\"username\")\r\n    }\r\n    Navigate = (itemId) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemId)\r\n    }\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n    collectitem = (itemId) => {\r\n        console.log(itemId)\r\n        this.props.collectItem(itemId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInDown'>\r\n                                <h2>Items pending collection</h2>\r\n                                <Pending collectItem={this.collectitem} navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInDown'>\r\n                                <h2> Items collected</h2>\r\n                                <Collected collectItem={this.collectitem} navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //let list = []\r\n    // if (state.firestore.ordered.requests) {\r\n    //     list = state.firestore.ordered.requests\r\n    //     let letmyRequests = list.filter(x => x.recipient === username)\r\n    //     console.log(\"letmyrequest: \"+ letmyRequests)\r\n    //     return {\r\n    //         myrequestlist: letmyRequests,\r\n\r\n    //     }\r\n    // }\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n\r\n}\r\nexport default compose(connect(mapStateToProps, { collectItem }), firestoreConnect([{ collection: 'items' }]))(MyItemStatus)\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Approve = ({ myRequest, navigate, toapprove, toReject }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n\r\n  const approve = (itemid) => {\r\n    toapprove(itemid)\r\n  }\r\n  const reject = (itemid) => {\r\n\r\n  }\r\n\r\n  // console.log(myRequest)\r\n  return (\r\n\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Image</th>\r\n          <th>Description</th>\r\n          <th>Conditon</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>Approval</th>\r\n          <th>Rejected</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n\r\n        { //createdat: to format time to string\r\n          myRequest && myRequest.filter(x => x.approved === false).map(x => {\r\n            return (\r\n              <tr>\r\n                <td>{x.itemName}</td>\r\n                <td>\r\n                  <img src={x.imageUrl} width=\"100\" height=\"100\" />\r\n                </td>\r\n                <td>{x.description}</td>\r\n                <td>{x.itemCondition}</td>\r\n                <td>{x.createdAt}</td>\r\n                <td>{x.itemStatus}</td>\r\n                <td><MDBBtn size=\"sm\" onClick={() => approve(x.id)} outline color=\"pink\">Approve</MDBBtn></td>\r\n                <td><MDBBtn size=\"sm\" onClick={() => toReject(x.id)} outline color=\"pink\">Reject</MDBBtn></td>\r\n              </tr>\r\n            )\r\n          })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Approve;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from \"mdbreact\";\r\nimport Approve from '../components/ApprovalPage/Approve'\r\n\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { approveItem, addRequest, rejectItem } from '../Redux/Actions/itemAction'\r\nclass Approval extends Component {\r\n    //state havent put yet ( look at status page for information)\r\n    state = {\r\n        username: localStorage.getItem(\"name\"),\r\n        usertype: localStorage.getItem(\"usertype\"),\r\n        itemList: [],\r\n    }\r\n    ApprovalItem = (itemid) => this.props.approveItem(itemid);\r\n    RejectItem = (itemid) => this.props.rejectItem(itemid);\r\n    Navigate = (itemId) => this.props.history.push(\"/itemDetails/\" + itemId)\r\n    GoBack = () => this.props.history.push(\"/\")\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <br />\r\n                                <h2>Pending Approval</h2>\r\n                                <hr />\r\n                                <Approve navigate={this.Navigate} myRequest={this.props.itemlist} toapprove={this.ApprovalItem} toReject={this.RejectItem} />\r\n                            </MDBAnimation>\r\n                            <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    // let username = localStorage.getItem(\"username\");\r\n    // let users = state.firestore.ordered.users;\r\n    // let userhandle = users.filter((user) => user.email == username)\r\n    // console.log(userhandle);\r\n\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, { approveItem, addRequest, rejectItem }), firestoreConnect([{ collection: 'items' }]))(Approval)","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Approved = ({ myRequest, navigate, collectItem }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n  let filteredData = myRequest.filter(x =>  x.approved === true && x.userHandle === localStorage.getItem(\"name\"))\r\n  let display = filteredData.map(x => { //need to call userhandle by account \r\n    return (\r\n      <tr>\r\n        <td>{x.itemName}</td>\r\n        <td>{x.createdAt}</td>\r\n        <td>{x.itemStatus}</td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {(filteredData.length !== 0) ? display : <React.Fragment>No Data</React.Fragment>}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Approved;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Rejected = ({ myRequest, navigate, collectItem }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n  let filteredData = myRequest.filter(x => x.itemStatus === \"Rejected\" && x.userHandle === localStorage.getItem(\"name\"))\r\n  let display = filteredData.map(x => { //need to call userhandle by account \r\n    return (\r\n      <tr>\r\n        <td>{x.itemName}</td>\r\n        <td>{x.createdAt}</td>\r\n        <td>{x.itemStatus}</td>\r\n        <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n      </tr>\r\n    )\r\n  })\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {(filteredData.length !== 0) ? display : <React.Fragment>No Data</React.Fragment>}\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Rejected;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBAnimation } from \"mdbreact\";\r\nimport PendingApproval from '../components/PendingStatus/PendingApproval'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { collectItem } from '../Redux/Actions/itemAction'\r\nimport Approved from '../components/PendingStatus/Approved';\r\nimport Rejected from '../components/PendingStatus/Rejected';\r\n\r\n\r\nclass MyDonateItem extends Component {\r\n    state = {\r\n        username: localStorage.getItem(\"username\")\r\n    }\r\n    Navigate = (itemId) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemId)\r\n    }\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n    collectitem = (itemId) => {\r\n        console.log(itemId)\r\n        this.props.collectItem(itemId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <h2>Donation items pending for Approval</h2>\r\n                                <PendingApproval navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <h2>Approved Items</h2>\r\n                                <Approved navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <h2>Rejected Items</h2>\r\n                                <Rejected navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                            <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //let list = []\r\n    // if (state.firestore.ordered.requests) {\r\n    //     list = state.firestore.ordered.requests\r\n    //     let letmyRequests = list.filter(x => x.recipient === username)\r\n    //     console.log(\"letmyrequest: \"+ letmyRequests)\r\n    //     return {\r\n    //         myrequestlist: letmyRequests,\r\n\r\n    //     }\r\n    // }\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n\r\n}\r\nexport default compose(connect(mapStateToProps, { collectItem }), firestoreConnect([{ collection: 'items' }]))(MyDonateItem)\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from '../pages/LoginPage';\r\nimport Listing from '../pages/Listing';\r\nimport BallotItems from '../pages/BallotItems';\r\nimport Donation from '../pages/Donation';\r\nimport Main from '../pages/Main'\r\nimport Signup from '../pages/Signup'\r\nimport Profile from '../pages/Profile'\r\nimport itemDetails from '../pages/ItemDetails'\r\nimport Logout from '../pages/Logout'\r\nimport MyItemStatus from '../pages/MyItemStatus'\r\nimport Approval from '../pages/Approval'\r\nimport MyDonateItem from '../pages/MyDonateItem';\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Main} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/listing' component={Listing} />\r\n        <Route path='/ballotItems' component={BallotItems} />\r\n        <Route path='/donation' component={Donation} />\r\n        <Route path='/signup' component={Signup} />\r\n        <Route path='/profile' component={Profile} />\r\n        <Route path = '/itemDetails/:itemId' component = {itemDetails}/>\r\n        <Route path = '/logout' component = {Logout}/>\r\n        <Route path='/status' component={MyItemStatus} />\r\n        <Route path='/mydonate' component={MyDonateItem} />\r\n        <Route path='/approval' component={Approval} />\r\n        <Route\r\n          render={function () {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n    categories: []\r\n\r\n}\r\n\r\nconst itemReducers = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'REJECTED_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'COLLECT_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'APPROVE_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SEARCH_ITEM':\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n        case 'ITEM_REQUEST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'ADD_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'FETCH_POST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'GET_COLLECTION_POINTS':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default itemReducers;","const initState = {\r\n    loginCred: [],\r\n    userid: ''\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return {\r\n                ...state,\r\n                loginCred: action.payload,\r\n                userid: action.id\r\n            }\r\n        case 'REGISTER_USER':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport userReducer from './userReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    item : itemReducer,\r\n    firestore: firestoreReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\nimport firebase from '../Firebase/fbConfig'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\n\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk.withExtraArgument({getFirebase, getFirestore})];\r\nconst store = createStore(RootReducer, initialState,\r\n    compose(applyMiddleware(...middleWare) ,reduxFirestore(firebase)\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport firebase, { config } from './Redux/Firebase/fbConfig'\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n  render() {\r\n    const { collapseID } = this.state;\r\n    return (\r\n      <Provider store={Store}>\r\n        <ReactReduxFirebaseProvider firebase={firebase} config={config} createFirestoreInstance={createFirestoreInstance} dispatch={Store.dispatch}>\r\n          <Router>\r\n            <div className='flyout'>\r\n              {collapseID && overlay}\r\n              <main style={{ marginTop: '4rem' }}>\r\n                <Routes />\r\n              </main>\r\n            </div>\r\n          </Router>\r\n        </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}