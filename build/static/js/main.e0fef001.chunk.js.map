{"version":3,"sources":["Redux/Firebase/fbConfig.jsx","components/GuestNavBar.jsx","components/Footer.jsx","pages/LoginPage.jsx","Redux/Actions/userAction.jsx","components/ListingPic.jsx","pages/Listing.jsx","components/Navbar.jsx","components/Donation/DonationGoogleMap.jsx","components/Profile/Uploadfile.jsx","Redux/Actions/itemAction.jsx","pages/Donation.jsx","components/Main/Card.jsx","components/Main/CategoriesBtn.jsx","pages/Main.jsx","pages/Signup.jsx","components/Profile/ProfileCard.jsx","pages/Profile.jsx","components/GoogleMap.jsx","pages/ItemDetails.jsx","pages/Logout.jsx","components/PendingStatus/Pending.jsx","components/PendingStatus/PendingApproval.jsx","components/PendingStatus/Collected.jsx","pages/MyItemStatus.jsx","components/ApprovalPage/Approve.jsx","pages/Approval.jsx","router/Routes.js","Redux/Reducers/itemReducer.js","Redux/Reducers/userReducer.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","GuestNavbar","Component","state","collapseID","toggleCollapse","this","setState","prevState","closeCollapse","collID","window","scrollTo","render","color","dark","expand","fixed","scrolling","href","className","fab","icon","style","height","width","onClick","id","isOpen","navbar","right","to","Footer","Date","getFullYear","LoginPage","email","password","handleChange","e","target","value","handleSubmit","form","props","loginUser","componentWillReceiveProps","nextProps","logintoken","token","localStorage","setItem","user","userlist","filter","getItem","handle","userId","imageUrl","history","push","error","alert","md","label","onChange","group","type","validate","success","size","compose","connect","response","ordered","users","userData","dispatch","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","payload","catch","err","firestoreConnect","collection","ListingPic","activeItem","length","showControls","showIndicators","itemId","src","alt","Listing","Navbar","username","componentDidMount","navigate","exact","AnyReactComponent","text","DonationGoogleMap","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","lat","lng","long","name","defaultProps","Uploadfile","file","onChangeHandleFile","console","log","files","reader","FileReader","readAsDataURL","addEventListener","result","url","picUpload","inputs","htmlFor","containerClassName","addRequest","formdata","add","Donation","categories","category","description","location","itemCondition","PictureUploaded","pic","GoBack","handleChangeMap","selectedPoint","collectionlist","point","Name","Coordinates","_lat","_long","today","approved","ballotTime","createdAt","toJSON","itemName","itemStatus","requestCount","userHandle","recipient","donateItem","col-md-1","rows","placeholder","class","map","each","outline","itemlist","items","collectionpoint","record","getState","getFirebase","getFirestore","Card","post","viewItem","border","padding","waves","ButtonPage","posts","onSubmit","Main","FilteredPosts","usertype","itemList","search","searchResult","searchDisplay","validateLogin","onKeyPress","searchitem","x","toLowerCase","includes","Navigate","itemID","FilterPosts","PopularListing","duration","onKeyDown","CategoriesBtn","Signup","cfmpassword","customer","registerUser","register","Fragment","GuestNavBar","onlick","ProfileCard","profile","picture","Profile","bio","onSubmitAll","updateProfile","doc","update","GoogleMap","address","ItemDetails","itemid","match","params","ReserveItem","item","requestStatus","updateItem","disabled","Address","ownProps","list","singleitem","Logout","clear","Pending","myRequest","collectItem","collect","PendingApproval","currentUser","Collected","MyItemStatus","collectitem","Approve","toapprove","approve","Approval","ApprovalItem","approveItem","Routes","React","path","component","Login","BallotItems","itemDetails","initState","itemReducers","action","loading","credentials","requests","notifications","userReducer","authenticated","RootReducer","combineReducers","itemReducer","firestoreReducer","middleWare","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","App","Store","createFirestoreInstance","overlay","marginTop","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0fef001.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nexport const config = {\r\n    apiKey: \"AIzaSyDgUKSulrYq50m8_Tle1uvLsH_LZV7Mlss\",\r\n    authDomain: \"secondlove-cc51b.firebaseapp.com\",\r\n    projectId: \"secondlove-cc51b\",\r\n    storageBucket: \"secondlove-cc51b.appspot.com\",\r\n    messagingSenderId: \"1046105738786\",\r\n    appId: \"1:1046105738786:web:e8dbd8bc929024205f447b\",\r\n    measurementId: \"G-EXKKW36RRM\"\r\n  };\r\n\r\nfirebase.initializeApp(config)\r\nfirebase.firestore()\r\n\r\nexport default firebase\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass GuestNavbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n    };\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        const { collapseID } = this.state;\r\n        return (\r\n            <div>\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        \r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/signup'\r\n                                >\r\n                                    <strong>Signup</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/login'\r\n                                >\r\n                                    <strong>Login</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GuestNavbar","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBFooter color='rgba-pink-strong' >\r\n                    <p className='footer-copyright mb-0 py-3 text-center'>\r\n                        &copy; {new Date().getFullYear()} Copyright:\r\n              <a href='https://www.MDBootstrap.com'> MDBootstrap.com </a>\r\n                    </p>\r\n                </MDBFooter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { loginUser } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport GuestNavbar from '../components/GuestNavBar';\r\nimport Footer from '../components/Footer';\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        // email: \"lovecode@email.com\",\r\n        // password: \"123456\"\r\n        const form = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.loginUser(form)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.logintoken.token) {\r\n            localStorage.setItem(\"token\", nextProps.logintoken.token)\r\n            localStorage.setItem(\"username\", this.state.email)\r\n            let user = this.props.userlist.filter((user) => user.email == this.state.email)\r\n            if (localStorage.getItem(\"username\")) {\r\n                localStorage.setItem(\"userhandle\", user[0].handle);\r\n                localStorage.setItem(\"userid\", user[0].userId);\r\n                localStorage.setItem(\"image\", user[0].imageUrl);\r\n            }\r\n            localStorage.setItem(\"usertype\", \"Normal User\")\r\n            this.props.history.push('/')\r\n        }\r\n        else if (nextProps.logintoken.error) {\r\n            this.setState({ email: '', password: '' })\r\n            alert(nextProps.logintoken.error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GuestNavbar />\r\n                <MDBContainer >\r\n                    <br />\r\n                    <MDBRow>\r\n                        <MDBCol md=\"12\">\r\n                            <h3 className=\"pink-text\">Welcome to SecondLove</h3>\r\n                            <hr />\r\n                            <form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\" success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" icon=\"lock\" group type=\"password\" onChange={this.handleChange} id=\"password\" validate value={this.state.password} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onClick={this.handleSubmit} color=\"red\" size=\"lg\">Login</MDBBtn>\r\n                                    <p></p>\r\n                                    <p> <a href=\"http://localhost:3000/signup\" >Click here to sign up if don't have an account</a></p>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    logintoken: state.user.response,\r\n    userlist: state.firestore.ordered.users\r\n});\r\n\r\n//export default LoginPage\r\nexport default compose(connect(mapStateToProps, { loginUser }), firestoreConnect([{ collection: 'users' }]))(LoginPage)","import firebase from '../Firebase/fbConfig'\r\nexport const loginUser = (userData) => dispatch => {\r\n    \r\n     fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/login',{\r\n        method: 'POST',\r\n        headers : {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    })\r\n        .then((res) => {\r\n            if(!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => dispatch({\r\n            type: 'SET_AUTHENTICATED',\r\n            payload: data\r\n        }))\r\n        .catch((err) => {\r\n            err.json().then((body)=>{\r\n                dispatch({\r\n                    type : 'SET_AUTHENTICATED',\r\n                    payload : body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: 'LOADING_USER' });\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/user',{\r\n        method: 'GET',\r\n        headers : {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : localStorage.FBIdToken\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        dispatch({\r\n          type: 'SET_USER',\r\n          payload: data\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  \r\nexport const registerUser = (userData) => dispatch => {\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/signup',{\r\n        method: 'POST',\r\n        headers : {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n    })\r\n        .then((res) => {\r\n            console.log(\"bro register user response coming in\")\r\n            if(!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => dispatch({\r\n            type: 'USER_REGISTERED',\r\n            payload: data\r\n        }))\r\n        .catch((err) => {\r\n            console.log(err)\r\n            err.json().then((body)=>{\r\n                //console.log(body)\r\n                dispatch({\r\n                    type : 'SET_ERRORS',\r\n                    payload : body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\nexport const updateProfile = (data,id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(id).update({ ...data })\r\n    dispatch({\r\n        type: \"UPDATE_PROFILE\"\r\n    })\r\n}","import React from \"react\";\r\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer } from\r\n\"mdbreact\";\r\n\r\nconst ListingPic = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={3}\r\n        showControls={true}\r\n        showIndicators={true}\r\n        className=\"z-depth-1\"\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem itemId=\"1\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\"\r\n                alt=\"First slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"2\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\"\r\n                alt=\"Second slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"3\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default ListingPic;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol,MDBBtn } from \"mdbreact\";\r\nimport ListingPic from '../components/ListingPic'\r\n\r\nclass Listing extends Component {\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol size = \"8\">\r\n                        <h2>Listing </h2>\r\n                        <ListingPic/>\r\n                        <h5>Item description</h5>\r\n                    </MDBCol>\r\n                    <MDBCol size = \"4\">\r\n                    <MDBBtn color=\"unique\" size = \"lg\">Request</MDBBtn>\r\n\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n            </MDBContainer>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default Listing","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBFooter, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"username\")\r\n    };\r\n    componentDidMount(){\r\n        if(!this.state.username)\r\n            this.props.navigate()\r\n    }\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n              id='sidenav-overlay'\r\n              style={{ backgroundColor: 'transparent' }}\r\n              onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n          );\r\n        \r\n        return (\r\n            <div>\r\n                <MDBNavbar color='rgba-pink-strong' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/' className='py-0 font-weight-bold'>\r\n                        <MDBIcon fab icon=\"gratipay\" style={{ height: '1.5rem', width: '1.5rem' }} />\r\n                        <strong className='align-middle'>SecondLove</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='/'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Home</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/profile'\r\n                                >\r\n                                    <strong>Profile</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/status'\r\n                                >\r\n                                    <strong>My Orders</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/donation'\r\n                                >\r\n                                    <strong>Donation</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/approval'\r\n                                    >\r\n                                        <strong>Approval</strong>\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n    \r\n                                <MDBNavItem>\r\n                                    <MDBNavLink\r\n                                        onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                    to='/logout'\r\n                                >\r\n                                    <strong>Logout</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text}) => <div> <img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\" />{text}</div>;\r\n\r\nclass DonationGoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact \r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n                lat={this.props.lat}\r\n                lng={this.props.long}\r\n                text={this.props.name}\r\n              />\r\n        </GoogleMapReact>\r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default DonationGoogleMap\r\n\r\n","import React, { Component } from 'react'\r\nimport { MDBInputGroup, MDBBtn } from 'mdbreact';\r\n\r\n\r\nexport default class Uploadfile extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            file: []\r\n        }\r\n    }\r\n\r\n    onChangeHandleFile = (e) => {\r\n        console.log(e.target.files[0])\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n\r\n        reader.readAsDataURL(file);\r\n        reader.addEventListener(\"load\", () => {\r\n                this.setState(state => ({\r\n                    ...state,\r\n                    form: {\r\n                        file: [reader.result]\r\n                    }\r\n                }));\r\n                const url = reader.result;\r\n                //console.log(\"#####\", url);\r\n                //Call Parent Component Method\r\n                this.props.picUpload(url)\r\n            },\r\n            false\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MDBInputGroup id='file'\r\n                inputs={\r\n                    <div className=\"custom-file\">\r\n                        <input onChange={this.onChangeHandleFile}\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                            Choose file\r\n                        </label>\r\n                    </div>\r\n                }\r\n                containerClassName=\"mb-3\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import firebase from '../Firebase/fbConfig'\r\n\r\nexport const getAvailableItems = () => dispatch => {\r\n    fetch('https://us-central1-secondlove-cc51b.cloudfunctions.net/api/items')\r\n        .then(res => res.json())\r\n        .then(data => dispatch({\r\n            type: 'GET_ITEMS',\r\n            payload: data\r\n        }))\r\n\r\n}\r\n\r\nexport const adduser = (record) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"users\").add({\r\n            ...record\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'USER_ADD'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const donateItem = (record) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"items\").add({\r\n            ...record\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'ADD_ITEM'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const approveItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'Approved' })\r\n    dispatch({\r\n        type: \"APPROVE_ITEM\"\r\n    })\r\n}\r\nexport const updateItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'PendingCollection', recipient: localStorage.getItem(\"userhandle\") })\r\n    dispatch({\r\n        type: \"UPDATE_ITEM\"\r\n    })\r\n}\r\n\r\nexport const collectItem = (id) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).update({ itemStatus: 'Collected' })\r\n    dispatch({\r\n        type: \"COLLECT_ITEM\"\r\n    })\r\n}\r\n\r\nexport const addRequest = (formdata) => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"requests\").add({ ...formdata })\r\n    dispatch({\r\n        type: \"ITEM_REQUEST\"\r\n    })\r\n}\r\nexport const deleteItem = id => dispatch => {\r\n    const db = firebase.firestore()\r\n    db.collection(\"items\").doc(id).delete()\r\n    dispatch({\r\n        type: \"DELETE_ITEM\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const ballotItem = (itemId) => dispatch => {\r\n    fetch(`https://us-central1-secondlove-cc51b.cloudfunctions.net/api/item/${itemId}/ballotItem`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.FBIdToken\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (!res.ok) throw res;\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            dispatch({\r\n                type: 'GET_ITEMS',\r\n                payload: data\r\n            })\r\n            dispatch({ type: 'CLEAR_ERRORS' })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            err.json().then((body) => {\r\n                dispatch({\r\n                    type: 'SET_ERRORS',\r\n                    payload: body\r\n                })\r\n            })\r\n        });\r\n}\r\n\r\n","import { MDBCol, MDBContainer, MDBRow, MDBInput, MDBBtn, MDBAnimation } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport DonationGoogleMap from '../components/Donation/DonationGoogleMap'\r\nimport Uploadfile from '../components/Profile/Uploadfile'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { donateItem } from '../Redux/Actions/itemAction'\r\n\r\n\r\nclass Donation extends Component {\r\n  state = {\r\n    file: '',\r\n    lat: '',\r\n    long: '',\r\n    categories: [\"home and living\", \"sports\", \"electronic\", \"toys\", \"clothes\", \"luxury\", \"utomobile\"],\r\n    category: '',\r\n    name: '',\r\n    description: '',\r\n    location: '',\r\n    itemCondition: ''\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    //console.log(this.props.collectionlist)\r\n  }\r\n\r\n  PictureUploaded = (pic) => {\r\n    console.log(pic);\r\n    this.setState(state => ({\r\n      ...state,\r\n      file: pic\r\n    }))\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //console.log(this.state.name, this.state.description) // to change state everytime you type -- question: value\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n  GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n  handleChangeMap = (e) => {\r\n    //console.log(this.state.name, this.state.description) // to change state everytime you type -- question: value\r\n    var selectedPoint = this.props.collectionlist.filter((point) => point.Name == e.target.value);\r\n    //console.log(selectedPoint);\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      lat: selectedPoint[0].Coordinates._lat,\r\n      long: selectedPoint[0].Coordinates._long\r\n    })\r\n\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    //this.props.donateItem(form) // componentDidMount\r\n    var today = new Date();\r\n\r\n    const form = {\r\n      approved: false,\r\n      ballotTime: '',\r\n      category: this.state.category ? this.state.category : \"home and living\",\r\n      createdAt: today.toJSON(),\r\n      description: this.state.description,\r\n      imageUrl: this.state.file,\r\n      itemCondition: this.state.itemCondition,\r\n      itemName: this.state.name,\r\n      itemStatus: \"pendingApproval\",\r\n      location: this.state.location,\r\n      requestCount: 0,\r\n      userHandle: localStorage.getItem(\"username\"),\r\n      recipient: '',\r\n    }\r\n    this.props.donateItem(form);\r\n    alert(\"Thank you for your donation!\");\r\n    this.setState({\r\n      file: '',\r\n      lat: '',\r\n      long: '',\r\n      category: '',\r\n      name: '',\r\n      description: '',\r\n      location: '',\r\n      itemCondition: ''\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol>\r\n              <MDBAnimation type = 'slideInLeft'>\r\n              <div>\r\n                <h3>Donation</h3>\r\n                <hr />\r\n                <MDBCol col-md-1>\r\n                  <MDBInput id='name' label=\"Item name\" type=\"text\" value={this.state.name} onChange={this.handleChange} validate error=\"wrong\" />\r\n                  <MDBInput id='description' type=\"textarea\" value={this.state.description} onChange={this.handleChange} label=\"Enter the item description here\" rows=\"5\" />\r\n\r\n                  <h6>Item Condition</h6>\r\n                  <select placeholder class=\"browser-default custom-select\" value={this.state.location} id=\"itemCondition\" onChange={this.handleChange}>\r\n                    <option value='WellUsed'>Well Used</option>\r\n                    <option value='SlightlyUsed'>Slightly Used</option>\r\n                    <option value='New'>New</option>\r\n                  </select>\r\n\r\n                  <h6>Select Category</h6>\r\n                  <select placeholder class=\"browser-default custom-select\" value={this.state.category} id=\"category\" onChange={this.handleChange}>\r\n                    {this.state.categories.map((each) => {\r\n                      return (\r\n                        <option value={each}>{each}</option>\r\n                      )\r\n                    })}\r\n                  </select>\r\n\r\n                  <p></p>\r\n\r\n                  <h6>Upload Image</h6>\r\n                  <Uploadfile id=\"image\" picUpload={this.PictureUploaded} ></Uploadfile>\r\n                </MDBCol>\r\n                <img src={this.state.file} width='500' height='500' />\r\n\r\n              </div>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n            <MDBCol>\r\n            <MDBAnimation type = 'slideInRight'>\r\n              <MDBRow>\r\n                <h3>Map Location</h3>\r\n                <hr />\r\n                <DonationGoogleMap lat={this.state.lat} long={this.state.long} name={this.state.location} />\r\n              </MDBRow>\r\n\r\n              <br />\r\n              <br />\r\n              <MDBRow>\r\n                <h6>Select Drop-off Location</h6>\r\n                <hr />\r\n                <select class=\"browser-default custom-select\" id=\"location\" value={this.state.location} onChange={this.handleChangeMap}>\r\n                  {this.props.collectionlist && this.props.collectionlist.map((point) => {\r\n                    return (\r\n                      <option value={point.Name}>{point.Name}</option>\r\n                    )\r\n                  })}\r\n                </select>\r\n                Name: {this.state.location}  <br />\r\n                Lat: {this.state.lat} <br />\r\n                Long: {this.state.long}\r\n              </MDBRow>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBBtn outline color=\"pink\" onClick={this.handleSubmit}>Upload </MDBBtn>\r\n          <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n        </MDBContainer>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itemlist: state.firestore.ordered.items,\r\n    collectionlist: state.firestore.ordered.collectionpoint,\r\n  }\r\n}\r\nexport default compose(connect(mapStateToProps, { donateItem }), firestoreConnect([{ collection: 'items' }, { collection: 'collectionpoint' }]))(Donation)\r\n","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBCardHeader, MDBBadge, MDBIcon, MDBRow } from 'mdbreact';\r\n\r\nconst Card = ({ post, viewItem }) => {\r\n  return (\r\n    <MDBCol>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardHeader>\r\n          <MDBRow>\r\n            <MDBIcon border='' icon=\"user\" style={{ padding: '10px' }} />\r\n            <h5 style={{ padding: '5px' }}>{post.userHandle}</h5>\r\n          </MDBRow>\r\n        </MDBCardHeader>\r\n        <MDBCardImage className=\"img-fluid\" src={post.imageUrl} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{post.itemName}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Item condition: {post.itemCondition}\r\n            <br />\r\n            Item ballot status: {post.itemStatus}\r\n            {/* Item id: {post.itemId} */}\r\n          </MDBCardText>\r\n          <MDBBtn outline color=\"pink\" onClick={() => viewItem(post.id)}>View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n      <br />\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\n\r\nconst ButtonPage = ({posts}) => {\r\n  let onSubmit = (e) => {\r\n    //console.log(e.target.id);\r\n    posts(e.target.id);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <MDBBtn id = 'home and living' onClick = {onSubmit} outline color=\"pink\">\r\n        <MDBIcon  icon=\"utensils\" className=\"mr-1\" /> Home and Living\r\n      </MDBBtn>\r\n\r\n      <MDBBtn id ='sports' outline color=\"pink\" onClick= {onSubmit}>\r\n        <MDBIcon icon=\"bicycle\" className=\"ml-1\" /> Sports\r\n      </MDBBtn>\r\n\r\n      <MDBBtn id = 'electronic' outline color=\"pink\" onClick={onSubmit}>\r\n        <MDBIcon icon=\"laptop\" className=\"mr-1\" /> Electronic\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'toys' onClick={onSubmit}>\r\n        <MDBIcon icon=\"gamepad\" className=\"mr-1\" /> Toys\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'clothes' onClick={onSubmit}>\r\n        <MDBIcon icon=\"tshirt\" className=\"mr-1\" /> Clothes\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'luxury' onClick={onSubmit}>\r\n        <MDBIcon icon=\"gem\" className=\"mr-1\" /> Luxury\r\n      </MDBBtn>\r\n\r\n      <MDBBtn outline color=\"pink\" id = 'automobile' onClick={onSubmit}>\r\n        <MDBIcon icon=\"car-side\" className=\"mr-1\" /> Automobile\r\n      </MDBBtn>\r\n      \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ButtonPage;","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput, MDBAnimation } from 'mdbreact'\r\nimport CarouselPage from '../components/CarouselPage'\r\nimport Card from '../components/Main/Card'\r\nimport CategoriesBtn from '../components/Main/CategoriesBtn'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        FilteredPosts: '',\r\n        username: localStorage.getItem(\"username\"),\r\n        usertype: localStorage.getItem(\"usertype\"),\r\n        itemList: [],\r\n        search: '',\r\n        searchResult: [],\r\n        searchDisplay: true\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    validateLogin = () => {\r\n        this.props.history.push('/logout')\r\n    }\r\n    onKeyPress = (e) => {\r\n        this.searchitem()\r\n    }\r\n    searchitem = () => {\r\n        var search = this.props.itemlist.filter(x => x.itemStatus !== \"pendingApproval\" && x.itemStatus !== 'PendingCollection' && x.itemStatus !== 'Collected' && x.itemName.toLowerCase().includes(this.state.search))\r\n        this.setState({ searchResult: search, searchDisplay: false })\r\n    }\r\n    Navigate = (itemID) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemID)\r\n    }\r\n\r\n    FilterPosts = (id) => {\r\n        //console.log(id);\r\n        let newPosts = this.props.itemlist;\r\n        const result = newPosts.filter(x => x.category == id)\r\n        this.setState(state => ({\r\n            ...state,\r\n            FilteredPosts: result,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let PopularListing;\r\n        if (this.props.itemlist)\r\n            PopularListing = this.props.itemlist.filter(x => x.itemStatus !== \"pendingApproval\" && x.itemStatus !== 'PendingCollection' && x.itemStatus !== 'Collected').map(x => <MDBCol size=\"4\"> <Card viewItem={this.Navigate} post={x} /> </MDBCol>)\r\n        return (\r\n            <div>\r\n                <Navbar navigate={this.validateLogin} />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBAnimation type=\"slideInLeft\" duration='1s'>\r\n                        <h3>Search for items</h3>\r\n                        <hr />\r\n                        <MDBInput id=\"search\" onChange={this.handleChange} onKeyDown={this.onKeyPress} value={this.state.search} label=\"Search\" />\r\n                        <MDBRow>\r\n                            {this.state.searchResult.length !== 0 && this.state.searchResult.map(x => {\r\n                                return (\r\n                                    <MDBCol size=\"4\"><Card viewItem={this.Navigate} post={x} /></MDBCol>\r\n                                )\r\n                            })}\r\n\r\n                            <MDBRow>\r\n                                <MDBCol>\r\n                                    <h3> Categories </h3>\r\n                                    <hr/>\r\n                                    <CategoriesBtn posts={this.FilterPosts}></CategoriesBtn>\r\n                                    <MDBRow>\r\n                                        {this.state.FilteredPosts && this.state.FilteredPosts.map(x => {\r\n                                            return (\r\n                                                <MDBCol size=\"4\">\r\n                                                    <Card post={x} viewItem={this.Navigate} />\r\n                                                </MDBCol>\r\n                                            )\r\n                                        })}\r\n                                    </MDBRow>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                            <br/>\r\n                            <br/>\r\n                        </MDBRow>\r\n                        {this.state.searchDisplay &&\r\n                            <MDBRow>\r\n                                <MDBCol>\r\n                                    <h3>Popular Listings</h3>\r\n                                    <hr/>\r\n                                    <MDBRow>\r\n                                        {PopularListing}\r\n                                    </MDBRow>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        }\r\n                        <br />\r\n                        <br />\r\n\r\n\r\n                    </MDBAnimation>\r\n                </MDBContainer>\r\n                <Footer />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n}\r\n\r\n\r\n//connect is a function, returns a higher order component\r\n//higher order component is wrapping the home component\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'items' }]))(Main)","import React, { Component, useEffect } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { registerUser } from '../Redux/Actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport GuestNavBar from '../components/GuestNavBar'\r\nimport Footer from '../components/Footer'\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        cfmpassword: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n    handleSubmit() {\r\n        console.log(this.state.customer);\r\n        this.props.registerUser(this.state.customer)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //When post is sent and received response\r\n        //move to login page\r\n        if(nextProps.register !== 0)\r\n            this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <GuestNavBar />\r\n                <br />\r\n                <MDBContainer >\r\n                    <MDBRow >\r\n                        <MDBCol size='12' >\r\n                            <h1>Create a new account!</h1>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"6\">\r\n                            {<form>\r\n                                <div className=\"grey-text\">\r\n                                    <MDBInput label=\"Username\" id=\"username\" onChange={this.handleChange} icon=\"user-alt\" group type=\"text\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.username} />\r\n                                    <MDBInput label=\"Email Address\" id=\"email\" icon=\"envelope\" onChange={this.handleChange} group type=\"email\" validate error=\"wrong\"\r\n                                        success=\"right\" value={this.state.email} />\r\n                                    <MDBInput label=\"Password\" id=\"password\" icon=\"lock\" group onChange={this.handleChange} type=\"password\" validate value={this.state.password} />\r\n                                    <MDBInput label=\"Confirmed Password\" id=\"cfmpassword\" icon=\"lock\" onChange={this.handleChange} group type=\"password\" validate value={this.state.cfmpassword} />\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <MDBBtn onlick={this.handleSubmit(this)} color=\"red\" size=\"lg\" href=\"http://localhost:3000/login\">Sign Up</MDBBtn>\r\n                                </div>\r\n                            </form>}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    register: state.user.response\r\n})\r\n\r\n//export default Signup\r\nexport default connect(mapStateToProps, { registerUser })(Signup)","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBRow, MDBContainer } from 'mdbreact';\r\n\r\nconst ProfileCard = ({profile}) => {\r\n  return (\r\n    <div>\r\n      <MDBCard style={{ width: \"22rem\" }}>\r\n        <MDBCardImage className=\"img-fluid\" src={profile.picture} waves />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>Name: {profile.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            Email: {profile.email} <br />\r\n            Location: {profile.location}\r\n          </MDBCardText>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileCard;","import { MDBCol, MDBContainer, MDBRow, MDBBtn, MDBInput, MDBAnimation } from 'mdbreact'\r\nimport React, { Component } from 'react'\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport ProfileCard from '../components/Profile/ProfileCard'\r\nimport UploadFile from '../components/Profile/Uploadfile'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { updateProfile } from '../Redux/Actions/userAction'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    bio: '',\r\n    name: localStorage.getItem(\"userhandle\"),\r\n    email: localStorage.getItem(\"username\"),\r\n    picture: localStorage.getItem(\"image\"),\r\n    location: '',\r\n  }\r\n\r\n  handleChange = (e) => { // to change state everytime you type -- question: value\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n  PictureUploaded = (pic) => {\r\n    this.setState({ picture: pic });\r\n  }\r\n  onSubmitAll = () => {\r\n    const form = {\r\n      email: this.state.email,\r\n      handle: this.state.name,\r\n      imageUrl: this.state.picture,\r\n      bio: this.state.bio\r\n    }\r\n    //Need userId\r\n    this.props.updateProfile(form, localStorage.getItem(\"userid\"))\r\n  }\r\n\r\n  GoBack = () => this.props.history.push('/')\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBRow>\r\n            <MDBCol size=\"5\">\r\n              <MDBAnimation type=\"slideInLeft\">\r\n              <ProfileCard profile={this.state} />\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n            <MDBCol size=\"7\">\r\n            <MDBAnimation type=\"slideInRight\">\r\n              <h3>Update Profile</h3>\r\n              <hr />\r\n              <MDBInput id='name' label=\"Name\" value={this.state.name} icon=\"user\" onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='bio' label=\"Biography\" icon=\"user\" value={this.state.bio} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='email' label=\"E-mail address\" icon=\"envelope\" value={this.state.email} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <MDBInput id='location' label=\"Location\" icon=\"map-marker\" value={this.state.location} onChange={this.handleChange} >\r\n              </MDBInput>\r\n              <UploadFile picUpload={this.PictureUploaded} />\r\n\r\n              <MDBRow>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.onSubmitAll}\r\n                    outline color=\"pink\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Update Profile\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n                <MDBCol size=\"6\">\r\n                  <MDBBtn\r\n                    onClick={this.GoBack}\r\n                    outline color=\"green\"\r\n                    className=\"m-0 px-3 py-2 z-depth-0\">\r\n                    Back\r\n                            </MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              </MDBAnimation>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.firestore.ordered.users,\r\n  }\r\n}\r\nexport default compose(connect(mapStateToProps, { updateProfile }), firestoreConnect([{ collection: 'users' }]))(Profile)","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" height=\"50\" width=\"50\" alt=\"\"/></div>;\r\n\r\nclass GoogleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 1.29,\r\n      lng: 103.85\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyA7UYITtdux3_kJzsFhO8r5Mom0bfXgyXU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          {this.props.lat &&\r\n            <AnyReactComponent\r\n              lat={this.props.lat}\r\n              lng={this.props.long}\r\n              text={this.props.address}\r\n            />\r\n            }\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleMap;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport GoogleMap from '../components/GoogleMap'\r\nimport { updateItem, addRequest } from '../Redux/Actions/itemAction'\r\n\r\n\r\nclass ItemDetails extends Component {\r\n    state = {\r\n        itemid: this.props.match.params.itemId,\r\n    };\r\n    ReserveItem = (item) => {\r\n        var today = new Date();\r\n        const form = {\r\n            createdAt: today.toJSON(),\r\n            itemId: item.id,\r\n            itemName: item.itemName,\r\n            recipient: localStorage.getItem(\"username\"),\r\n            requestStatus: \"Pending\" //pending(request) == pendingcollection(item)\r\n        }\r\n        this.props.updateItem(item.id) //update itemstatus to pendingcollection\r\n        this.props.addRequest(form)\r\n        this.props.history.push('/status')\r\n    }\r\n\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <br />\r\n\r\n                    <MDBRow>\r\n                        {this.props.itemlist && this.props.itemlist.map(x => {\r\n                            return (\r\n                                <MDBCol size=\"6\">\r\n                                    <h2>Item Details</h2>\r\n                                    <hr />\r\n                                    <MDBCard style={{ width: \"22rem\" }}>\r\n                                        <MDBCardImage className=\"img-fluid\" src={x.imageUrl} waves />\r\n                                        <MDBCardBody>\r\n                                            <MDBCardTitle>{x.itemName} <br/> {\"Category: \" + x.category}</MDBCardTitle>\r\n                                            <MDBCardText>\r\n                                                {x.description} <br />\r\n                                                {x.location}\r\n                                            </MDBCardText>\r\n                                            {((x.itemStatus == \"Collected\" || x.itemStatus == \"PendingCollection\") && <MDBBtn onClick={() => this.ReserveItem(x)} outline color=\"pink\" disabled > Ordered </MDBBtn>)  }\r\n                                            {((x.itemStatus !== \"Collected\" && x.itemStatus !== \"PendingCollection\") && <MDBBtn onClick={() => this.ReserveItem(x)} outline color=\"pink\" > Place Order </MDBBtn>)  }\r\n                                        </MDBCardBody>\r\n                                    </MDBCard>\r\n                                </MDBCol>\r\n                            )\r\n                        })}\r\n\r\n                        <MDBCol size=\"6\">\r\n                            <h2>Item Location</h2>\r\n                            <hr />\r\n                            {this.props.collectionpoint && this.props.collectionpoint.map(x => {\r\n                                return (\r\n                                    <div>\r\n                                        <GoogleMap address={x.Address} lat={x.Coordinates['_lat']} long={x.Coordinates['_long']} />\r\n                                        <br />\r\n                                        Address: {x.Address}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBBtn outline color=\"green\" onClick={this.GoBack} >  Back\r\n                       </MDBBtn>\r\n                </MDBContainer>\r\n                <br />\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.itemId;\r\n    let list = []\r\n    if (state.firestore.ordered.items && state.firestore.ordered.collectionpoint) {\r\n        list = state.firestore.ordered.items\r\n        let singleitem = list.filter(x => x.id === id)\r\n        console.log(\"id: \"+ id)\r\n        console.log(singleitem)\r\n        var location = singleitem[0].location\r\n        let mappoint = state.firestore.ordered.collectionpoint;\r\n        let collectpoint = mappoint.filter(x => x.Name === location)\r\n        return {\r\n            itemlist: singleitem,\r\n            collectionpoint: collectpoint\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { updateItem, addRequest }), firestoreConnect([{ collection: 'items' }, { collection: 'collectionpoint' }]))(ItemDetails)","import React, { Component } from 'react'\r\n\r\nexport default class Logout extends Component {\r\n    componentDidMount(){\r\n        localStorage.clear()\r\n        this.props.history.push('/login')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Pending = ({ myRequest, navigate,collectItem }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n\r\n  function collect(itemId){\r\n    collectItem(itemId)\r\n  };\r\n  console.log(myRequest);\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n          <th>Collected</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        \r\n        {myRequest && myRequest.filter(x => x.itemStatus === \"PendingCollection\" && x.recipient === localStorage.getItem(\"userhandle\")).map(x => {\r\n          return (\r\n            <tr>\r\n              <td>{x.itemName}</td>\r\n              <td>{x.createdAt}</td>\r\n              <td>{x.itemStatus}</td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => collect(x.id)} outline color=\"pink\">Collect Item</MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Pending;","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\n\r\nconst PendingApproval = ({ myRequest, navigate, currentUser }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n  //console.log(myRequest)\r\n  return (\r\n    \r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n          <th>Userhandler</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        {myRequest && myRequest.filter(x => x.itemStatus === \"pendingApproval\" && x.userHandle === localStorage.getItem(\"userhandle\")).map(x => { //need to call userhandle by account \r\n          return (\r\n            <tr>\r\n              <td>{x.itemName}</td>\r\n              <td>{x.createdAt}</td>\r\n              <td>{x.itemStatus}</td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n             <td>{x.userHandle}</td>\r\n            </tr>\r\n\r\n          )\r\n        })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default PendingApproval\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Collected = ({ myRequest, navigate,collectItem }) => {\r\n  function viewItem(itemId){\r\n    navigate(itemId)\r\n  };\r\n\r\n  console.log(myRequest);\r\n  return (\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>View Item</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        \r\n        {myRequest && myRequest.filter(x => x.itemStatus === \"Collected\" && x.recipient === localStorage.getItem(\"userhandle\")).map(x => {\r\n          return (\r\n            <tr>\r\n              <td>{x.itemName}</td>\r\n              <td>{x.createdAt}</td>\r\n              <td>{x.itemStatus}</td>\r\n              <td><MDBBtn size=\"sm\" onClick={() => viewItem(x.id)} outline color=\"pink\">View Item</MDBBtn></td>\r\n            </tr>\r\n          )\r\n        })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Collected;","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBAnimation } from \"mdbreact\";\r\nimport Pending from '../components/PendingStatus/Pending'\r\nimport PendingApproval from '../components/PendingStatus/PendingApproval'\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { collectItem } from '../Redux/Actions/itemAction'\r\nimport Collected from '../components/PendingStatus/Collected';\r\n\r\n\r\nclass MyItemStatus extends Component {\r\n    state = {\r\n        username: localStorage.getItem(\"username\")\r\n    }\r\n    Navigate = (itemId) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemId)\r\n    }\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n\r\n    collectitem = (itemId) => {\r\n        console.log(itemId)\r\n        this.props.collectItem(itemId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <br />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInDown'>\r\n                                <h2>Items pending collection</h2>\r\n                                <Pending collectItem={this.collectitem} navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n\r\n                        <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInDown'>\r\n                                <h2> Items collected</h2>\r\n                                <Collected collectItem={this.collectitem} navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                            </MDBAnimation>\r\n                        </MDBCol>\r\n\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                        \r\n                            <MDBCol size=\"12\">\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <h2>Donation items pending for Approval</h2>\r\n                                <PendingApproval navigate={this.Navigate} myRequest={this.props.itemlist} />\r\n                                </MDBAnimation>\r\n                            \r\n                            <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                       </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //let list = []\r\n    // if (state.firestore.ordered.requests) {\r\n    //     list = state.firestore.ordered.requests\r\n    //     let letmyRequests = list.filter(x => x.recipient === username)\r\n    //     console.log(\"letmyrequest: \"+ letmyRequests)\r\n    //     return {\r\n    //         myrequestlist: letmyRequests,\r\n\r\n    //     }\r\n    // }\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n\r\n}\r\nexport default compose(connect(mapStateToProps, { collectItem }), firestoreConnect([{ collection: 'items' }]))(MyItemStatus)\r\n","import React from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from 'mdbreact';\r\n\r\nconst Approve = ({ myRequest, navigate, toapprove }) => {\r\n  function viewItem(itemId) {\r\n    navigate(itemId)\r\n  };\r\n\r\n  const approve = (itemid) => {\r\n    toapprove(itemid)\r\n  }\r\n\r\n  // console.log(myRequest)\r\n  return (\r\n\r\n    <MDBTable>\r\n      <MDBTableHead>\r\n        <tr>\r\n          <th>Item Name</th>\r\n          <th>Image</th>\r\n          <th>Description</th>\r\n          <th>Conditon</th>\r\n          <th>Date Requested</th>\r\n          <th>Status</th>\r\n          <th>Approval</th>\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n\r\n        { //createdat: to format time to string\r\n          myRequest && myRequest.filter(x => x.itemStatus === \"pendingApproval\").map(x => {\r\n            return (\r\n              <tr>\r\n                <td>{x.itemName}</td>\r\n                <td>\r\n                  <img src={x.imageUrl} width=\"100\" height=\"100\" />\r\n                </td>\r\n                <td>{x.description}</td>\r\n                <td>{x.itemCondition}</td>\r\n                <td>{x.createdAt}</td>\r\n                <td>{x.itemStatus}</td>\r\n\r\n                <td><MDBBtn size=\"sm\" onClick={() => approve(x.id)} outline color=\"pink\">Approve</MDBBtn></td>\r\n              </tr>\r\n            )\r\n          })}\r\n\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n  );\r\n}\r\n\r\nexport default Approve;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation ,MDBBtn} from \"mdbreact\";\r\nimport Approve from '../components/ApprovalPage/Approve'\r\n\r\nimport Navbar from '../components/Navbar'\r\nimport Footer from '../components/Footer'\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { approveItem, addRequest } from '../Redux/Actions/itemAction'\r\nclass Approval extends Component {\r\n    //state havent put yet ( look at status page for information)\r\n    state = {\r\n        username: localStorage.getItem(\"username\"),\r\n        usertype: localStorage.getItem(\"usertype\"),\r\n        itemList: [],\r\n\r\n    }\r\n\r\n\r\n\r\n    ApprovalItem = (itemid) => {\r\n        var today = new Date();\r\n        const form = {\r\n            createdAt: today.toJSON(),\r\n            itemId: itemid,\r\n            \r\n        }\r\n        this.props.approveItem(itemid);\r\n        //this.props.history.push('/approval')\r\n    }\r\n    Navigate = (itemId) => {\r\n        this.props.history.push(\"/itemDetails/\" + itemId)\r\n    }\r\n\r\n    GoBack = () => { this.props.history.push(\"/\") }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol>\r\n                            <MDBAnimation type='slideInUp'>\r\n                                <br />\r\n                                <h2>Pending Approval</h2>\r\n                                <hr />\r\n                                <Approve navigate={this.Navigate} myRequest={this.props.itemlist} toapprove={this.ApprovalItem} />\r\n                            </MDBAnimation>\r\n                            <MDBBtn outline color=\"green\" onClick={this.GoBack} > Back\r\n                       </MDBBtn>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n\r\n                </MDBContainer>\r\n                <br />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    // let username = localStorage.getItem(\"username\");\r\n    // let users = state.firestore.ordered.users;\r\n    // let userhandle = users.filter((user) => user.email == username)\r\n    // console.log(userhandle);\r\n\r\n    return {\r\n        itemlist: state.firestore.ordered.items,\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, { approveItem, addRequest }), firestoreConnect([{ collection: 'items' }]))(Approval)","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from '../pages/LoginPage';\r\nimport Listing from '../pages/Listing';\r\nimport BallotItems from '../pages/BallotItems';\r\nimport Donation from '../pages/Donation';\r\nimport Main from '../pages/Main'\r\nimport Signup from '../pages/Signup'\r\nimport Profile from '../pages/Profile'\r\nimport itemDetails from '../pages/ItemDetails'\r\nimport Logout from '../pages/Logout'\r\nimport MyItemStatus from '../pages/MyItemStatus'\r\nimport Approval from '../pages/Approval'\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Main} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/listing' component={Listing} />\r\n        <Route path='/ballotItems' component={BallotItems} />\r\n        <Route path='/donation' component={Donation} />\r\n        <Route path='/signup' component={Signup} />\r\n        <Route path='/profile' component={Profile} />\r\n        <Route path = '/itemDetails/:itemId' component = {itemDetails}/>\r\n        <Route path = '/logout' component = {Logout}/>\r\n        <Route path='/status' component={MyItemStatus} />\r\n        <Route path='/approval' component={Approval} />\r\n        <Route\r\n          render={function () {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","const initState = {\r\n    categories: []\r\n\r\n}\r\n\r\nconst itemReducers = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case 'UPDATE_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'COLLECT_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'APPROVE_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'SEARCH_ITEM':\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n        case 'ITEM_REQUEST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'ADD_ITEM':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'FETCH_POST':\r\n            return {\r\n                ...state,\r\n            }\r\n        case 'GET_COLLECTION_POINTS':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default itemReducers;","const initState = {\r\n    loading: false,\r\n    credentials: {},\r\n    requests: [],\r\n    notifications: [],\r\n    response: []\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_AUTHENTICATED':\r\n            return {\r\n                ...state,\r\n                response: action.payload\r\n            }\r\n        case 'SET_UNAUTHENTICATED':\r\n            return initState\r\n\r\n        case 'SET_USER':\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case 'USER_REGISTERED':\r\n            return {\r\n                ...state,\r\n                response: action.payload\r\n            }\r\n\r\n        case 'UPDATE_PROFILE':\r\n            return {\r\n                ...state,\r\n            };\r\n\r\n        case 'LOADING_USER':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport userReducer from './userReducer'\r\n\r\nconst RootReducer = combineReducers({\r\n    item : itemReducer,\r\n    firestore: firestoreReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from '../Reducers/RootReducer'\r\nimport firebase from '../Firebase/fbConfig'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\n\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk.withExtraArgument({getFirebase, getFirestore})];\r\nconst store = createStore(RootReducer, initialState,\r\n    compose(applyMiddleware(...middleWare) ,reduxFirestore(firebase)\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './router/Routes';\r\nimport Store from './Redux/Store/Store';\r\nimport { Provider } from 'react-redux';\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport firebase, { config } from './Redux/Firebase/fbConfig'\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: ''\r\n  };\r\n  render() {\r\n    const { collapseID } = this.state;\r\n    return (\r\n      <Provider store={Store}>\r\n        <ReactReduxFirebaseProvider firebase={firebase} config={config} createFirestoreInstance={createFirestoreInstance} dispatch={Store.dispatch}>\r\n          <Router>\r\n            <div className='flyout'>\r\n              {collapseID && overlay}\r\n              <main style={{ marginTop: '4rem' }}>\r\n                <Routes />\r\n              </main>\r\n            </div>\r\n          </Router>\r\n        </ReactReduxFirebaseProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}